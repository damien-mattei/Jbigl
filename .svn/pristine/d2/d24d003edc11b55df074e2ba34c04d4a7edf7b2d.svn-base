;; Bigloo Scheme code for java virtual machine and tomcat web server

;; author: Damien Mattei

;; compile with:
;;
;; cd bigloo4.2c/examples/Jbigl
;; make
;;
;;
;; building a jar library for netbeans:
;; jar cf ~/Dropbox/BiglFunctProg.jar eu

;; how to make bigloo_s.zip usable by tomcat server:
;; mkdir tmp
;; cd tmp
;; unzip /usr/local/lib/bigloo/4.1a/bigloo_s.zip
;; jar cf bigloo-4.1.jar bigloo/
;; deploy bigloo*.jar with web application



(module eu.oca.bigloofunct.BiglooCode 


	(include "../../../Dropbox/lib/syntactic-sugar.scm") ;; YES in bigloo you can include files from other schemes...
	(include "../../../Dropbox/lib/display.scm")

	;;(include "ResultSet.scm")
	;; java jigloo -r -skip-nested-classes -no-transient -no-volatile -o ../examples/Jbigl/jigloo-generated-ResultSet.scm java.sql.ResultSet
	(include "jigloo-generated-ResultSet.scm")

	;; java jigloo -r -skip-nested-classes -no-transient -no-volatile -o ../examples/Jbigl/jigloo-generated-String.scm java.lang.String
	;;(include "jigloo-generated-String.scm")

	(java 
	 
	 ;;(class %jobject "java.lang.Object")
	 ;;(class %jstring::%jobject "java.lang.String")


	 ;; (class %jresultset 
	 ;; 	(method next::bool (::%jresultset) "next") 
	 ;; 	(method abstract public  last::bool (::%jresultset )  "last")
	 ;; 	(method abstract public  getRow::int (::%jresultset )  "getRow")

	 ;; 	"java.sql.ResultSet")
	 
	 ;;(array int* ::int)
	 (array byte* ::byte) ;; peux t'on utiliser string a la place (cf awt.scm)
	 (array byte** ::byte*)
	 
	 ;;(array string* ::string)
	 ;;(array jstring* ::%jstring)
	 
	 (class eu.oca.bigloofunct.JavaForBigloo
		(method static hello::int (::int*) "hello")
		(method static displayByteArrayString::void (::byte**) "displayByteArrayString") ;; java name
		;;(method static bstring->jstring::%jstring (::byte*) "bstring_to_jstring");; java name
		;;(method static bstring->jstring::%jstring (::string) "bstring_to_jstring");; java name
		(method static bstring->jstring::java.lang.String (::string) "bstring_to_jstring");; java name 
		(method static jstring->bstring::string (::java.lang.String) "jstring_to_bstring");; java name 
		(method static pi2dec::double () "pi2dec")
		(method static piFloat::float () "piFloat")
		(method static jdouble->bstring::string (::double) "jdouble_to_bstring");; java name 
		(method static displayByteStringNL::void (::string) "displayByteStringNL");; java name 
		(method static displayDoubleNL::void (::double) "displayDoubleNL");; java name 
		(method static displayInt::void (::int) "displayInt");; java name 
		"eu.oca.bigloofunct.JavaForBigloo")

	 ;; (class eu.oca.bigloofunct.JavaForGlooGloo
	 ;; 	(method static hello::int (::int*) "hello")
	 ;; 	(method static displayByteArrayString::void (::byte**) "displayByteArrayString")
	 ;; 	"eu.oca.bigloofunct.JavaForGlooGloo")
	 
	 (class eu.oca.DataBase
		;;(method static DataBase::void (::void) "DataBase")
		(constructor new ())
		;;(field static resultSet::%jresultset "resultSet")
		(field static resultSet::java.sql.ResultSet "resultSet")
		(field static resultSet2::java.sql.ResultSet "resultSet2")
		(field static resultSetRequete::java.sql.ResultSet "resultSetRequete")
		(field static resultSetOrbite::java.sql.ResultSet "resultSetOrbite")
		(field static val::int "val")
		(method getval::int (::eu.oca.DataBase) "getval")
		;;(method getresultSet::%jresultset (::eu.oca.DataBase) "getresultSet")
		(method getresultSet::java.sql.ResultSet (::eu.oca.DataBase) "getresultSet")
		(method static searchDriverStatic::void () "searchDriverStatic")
		(method static deregisterDriverStatic::void () "deregisterDriverStatic")
		(method static setResultSetNull::void () "setResultSetNull")
		(method static setResultSet2Null::void () "setResultSet2Null")
		(method searchDriverDynamic::void (::eu.oca.DataBase) "searchDriverDynamic")
		(method static connectStatic::void () "connectStatic")
		(method connectDynamic::void (::eu.oca.DataBase) "connectDynamic")
		(method static closeStatic::void () "closeStatic")
		(method closeDynamic::void (::eu.oca.DataBase) "closeDynamic")
		(method static createStatementStatic::void () "createStatementStatic")
		(method createStatementDynamic::void (::eu.oca.DataBase) "createStatementDynamic")
		;;(method static executeQueryStatic::void (::%jstring) "executeQueryStatic")
		(method static executeQueryStatic::void (::java.lang.String) "executeQueryStatic") 
		(method static executeQueryStatic2args::void (::java.lang.String ::int) "executeQueryStatic")
		(method static executeQueryStaticStringString::void (::java.lang.String ::java.lang.String) "executeQueryStatic")
		;;(method executeQueryDynamic::void (::eu.oca.DataBase ::%jstring) "executeQueryDynamic")
		(method executeQueryDynamic::void (::eu.oca.DataBase ::java.lang.String) "executeQueryDynamic") 
		(method static readDataBase::void () "readDataBase")
		;;(method setResultSetNull::void () "setResultSetNull")
		"eu.oca.DataBase")

	 ) ;; end java



	
	(export (callback::int ::int))
	;(export (affichen::nil ::bstring))
	(export (affichen::nil ::byte*))
	(export (affiche::nil ::byte*))
	
	(export (squareJavaArray::int* ::int*))
	(export (displayArrayByteStar::nil  ::byte**))
	(export (displayReverseArrayByteStar::nil  ::byte**))
	(export (reverseArrayByteStar::byte**  ::byte**))

	(export (ResultatMesuresF::byte* ::byte* ::byte* ::byte*))
	(export (ResultatMesuresFbeta::byte* ::byte* ::byte*))
	(export (ResultatMesuresF2::byte* ::eu.oca.DataBase))
	(export (ResultatMesuresAF::byte* ::byte* ::byte* ::byte*))


	(main start)) ;; define the main routine called at startup

;; end module

;; macros 
(define-syntax display-wasnull 
  (syntax-rules ()
    ((_ rs)  (begin
	       (display "BiglooCode.scm :: ResultatMesuresF : = (java.sql.ResultSet-wasNull rs):")
	       (display (java.sql.ResultSet-wasNull rs))
	       (newline)))))


;; (define-syntax when
;;   (syntax-rules ()
;;     ((_ pred b1 ...)
;;      (if-t pred (begin b1 ...)))))


;; (define-syntax while
;;   (syntax-rules ()
;;     ((_ pred b1 ...)
;;      (let loop () (when pred b1 ... (loop))))))



(define (start argv)
  
  (let* ((tab (make-int* 2))
	(str (make-byte* 5))
	(tabstr (make-byte** 3))
	;;(bstr::byte* " WORLD")
	(bstr (make-byte* 5))
	(bstr2 (make-byte* 5))
	(v (make-vector 3))
	(identificateur "Nom")
	;;(identificateur "")
	;;(objet "cocorico")
	(objet "COU 1027")
	(choixres "Orbite")
	(bstr_identificateur (make-byte* (string-length identificateur)))
	(bstr_objet (make-byte* (string-length objet)))
	(bstr_choixres (make-byte* (string-length choixres))))


    (set! bstr_identificateur identificateur)
    (set! bstr_objet objet)

    (print "tab length: " (int*-length tab))
    (int*-set! tab 0 3)
    (int*-set! tab 1 6)
    (display (int*-ref tab 1))
    (newline)
    (set! str "HELLO")
    (display "str : ")
    (display str)
    (newline)
    (byte**-set! tabstr 0 str)
    (display "tabstr [0] : ")
    (display (byte**-ref tabstr 0))
    (newline)
    (vector-set! v 0 (byte**-ref tabstr 0))
    (display "v [0] : ")
    (display (vector-ref v 0))
    (newline)
    ;;(byte**-set! tabstr 1 "HELLO") ; marche pas 
    ;;(string-set! str 0 "h") ; marche pas
    (set! bstr " WORLD")
    (set! bstr2 " !")
    (byte**-set! tabstr 1 bstr)
    (byte**-set! tabstr 2 bstr2)
    (set! v (java-array-byte*->scheme-vector tabstr))
    (display "v : ")
    (display v)
    (newline)
    
    
    (display "(java-array-int->scheme-vector tab) : ")
    (display (java-array-int->scheme-vector tab))
    (newline)
    (display "(square-vector (java-array-int->scheme-vector tab)) : ")
    (display (square-vector (java-array-int->scheme-vector tab)))
    (newline)
  
    ;; call java methods
    (print (eu.oca.bigloofunct.JavaForBigloo-hello tab))
    ;;(eu.oca.bigloofunct.JavaForBigloo-bstring->jstring "hello boy")
   
    ;;(eu.oca.bigloofunct.JavaForGlooGloo-hello tab)
    
    (newline)
    (display "(eu.oca.bigloofunct.JavaForBigloo-displayByteArrayString tabstr)")
    (newline)
    (eu.oca.bigloofunct.JavaForBigloo-displayByteArrayString tabstr)
    (newline)
    
    (ResultatMesuresF bstr_identificateur bstr_objet bstr_choixres) ;; juste pour pas qu'il rale ,devrait etre bstr_choixres

;;    (ResultatMesuresFbeta bstr_identificateur bstr_objet)

    (newline)

    ;;  (eu.oca.DataBase-searchDriverStatic)

    (newline)

    ;; (ResultatMesuresF2 (eu.oca.DataBase-new))

    )
  
  )


;*---------------------------------------------------------------------*/
;*    callback ...                                                     */
;*---------------------------------------------------------------------*/
(define (callback x)
  (+ 1 x))

(define (square x)
  (* x x))

(define (square-list L)
  (map square L))

(define (square-vector V)
  (vector-map square V))

(define (sum-vector V)
  (apply + (vector->list V)))

(define (squareJavaArray A)
  (scheme-vector->java-array-int (square-vector (java-array-int->scheme-vector A))))

(define (java-array-int->scheme-vector A)
  (let* ((len (int*-length A))
	 (res (make-vector len)))
    (display len)
    (newline)
    ;(display A)
    ;(newline)
    (let loop ((i 0))
      (vector-set! res i (int*-ref A i))
      (if (= i (- len 1))
	  res
	  (loop (+ i 1))))))


(define (scheme-vector->java-array-int V)
  (let* ((len (vector-length V))
	 (res (make-int* len)))
    (let loop ((i 0))
      (int*-set! res i (vector-ref V i))
      (if (= i (- len 1))
	  res
	  (loop (+ i 1))))))

(define (java-array-byte*->scheme-vector A)
  (let* ((len (byte**-length A))
	 (result (make-vector len)))
    (let loop ((i 0))
      (vector-set! result i (byte**-ref A i))
      (if (= i (- len 1))
	  result
	  (loop (+ i 1))))))

(define (scheme-vector->java-array-byte* V)
  (let* ((len (vector-length V))
	 (res (make-byte** len)))
    (let loop ((i 0))
      (byte**-set! res i (vector-ref V i))
      (if (= i (- len 1))
	  res
	  (loop (+ i 1))))))

(define (displayArrayByteStar jab*)
  (display (java-array-byte*->scheme-vector jab*))
  (newline)
  '())

(define (displayReverseArrayByteStar jab*)
  (display (reverseArrayByteStar jab*))
  (newline)
  '())

(define (reverseArrayByteStar jab*)
  (scheme-vector->java-array-byte* (list->vector (reverse (vector->list (java-array-byte*->scheme-vector jab*))))))

(define (affichen s)
  (display s)
  (newline)
  ;;1
  '()
  )

(define (affiche s)
  (display s)
  '()
  )

(define (ResultatMesuresF2 db)
  (display "BiglooCode.scm :: ResultatMesuresF2")
  (newline)
  (eu.oca.DataBase-searchDriverDynamic db)
  (make-byte* 255))


(define res '()) ;; will be result ( string,HTML page)


(define (ResultatMesuresF bstr_identificateur bstr_objet bstr_choixres)
;;(define (ResultatMesuresF identificateur objet)
  
  (let* (
	 (len_bstr_identificateur (byte*-length bstr_identificateur))
	 (identificateur (make-string len_bstr_identificateur))
	 (len_bstr_objet (byte*-length bstr_objet))
	 (objet (make-string len_bstr_objet))
	 (len_bstr_choixres (byte*-length bstr_choixres))
	 (choixres (make-string len_bstr_choixres))
	 (essai "")
	 (baraterreur  "Veuillez re-initialiser la page et recommencer la requète : ") ;; baratin erreur
	 (baratexiste "Veuillez re-initialiser la page et recommencer la requète, l'objet demandé existe, mais avec le nom suivant :") ;; baratin existe
	 (baratobjet " L'objet demandé existe, mais il existe aussi d'autres objets correspondants à cet identificateur (voir la liste ci-dessous) !")
	 (baratuni "Veuillez re-initialiser la page et recommencer la requète : Plusieurs objets correspondent à votre requète, choisissez en un seul dans la liste ")
	 (flagerreur 0) ;; flag erreur
	 (flaguni 0)  ;; flag unique
	 (flagexiste 0) ;; flag existe
	 (char-set "UTF-8")  ;; "ISO-8859-1") ;; HTML 5 char set 
	 (len 0)
	 (dyna #f)
	 (db (if dyna
		 (eu.oca.DataBase-new)
		 '())) ;; database
	 (monchoix "")
	 (flagnom 0)
	 (flagobjet 0)
	 (requeteuni::java.lang.String  (begin
					  (set! objet bstr_objet)
					  (eu.oca.bigloofunct.JavaForBigloo-bstring->jstring (string-append "SELECT DISTINCTROW Coordonnées.Nom FROM Coordonnées WHERE Coordonnées.Nom Like '" objet " %'"))))
	 (requetexiste "")
	 ;;(requetexiste::java.lang.String (java.lang.String-java.lang.String8 (string-append "SELECT DISTINCTROW Coordonnées.Nom FROM Coordonnées WHERE Coordonnées.Nom Like '" objet "'")))
	 ;;(jstr::%jstring (eu.oca.bigloofunct.JavaForBigloo-bstring->jstring "hello boy"))
	 (jstr::java.lang.String (eu.oca.bigloofunct.JavaForBigloo-bstring->jstring "hello boy")) 
	 (nombreobjets 0)
	 (objetexiste 0)
	 (rsuni::java.sql.ResultSet eu.oca.DataBase-resultSet2)
	 (rsexiste::java.sql.ResultSet eu.oca.DataBase-resultSet)
	 ;;(rs::java.sql.ResultSet eu.oca.DataBase-resultSetRequete)
	 (rs::java.sql.ResultSet eu.oca.DataBase-resultSet)
	 
	 (marequete
	  (sql-server->mysql-server-syntax 
	   (string-append
	    "SELECT DISTINCTROW Coordonnées.Nom, Coordonnées.[N° Fiche], Coordonnées.[N° BD], Coordonnées.[N° ADS]"
	    ", Coordonnées.[Alpha 2000], Coordonnées.[Delta 2000], Coordonnées.mag1, Coordonnées.mag2, Coordonnées.Spectre" 
	    ", Coordonnées.[N° HIP], Coordonnées.[Orb]"
	    ", Mesures.Date, Mesures.Angle, Mesures.Sépar, Mesures.[Nb Nuits], Mesures.CodeObs,"
	    " Mesures.dimension, Mesures.Instrument, Mesures.Réf, Mesures.Nota"
	    " FROM Coordonnées INNER JOIN Mesures ON Coordonnées.[N° Fiche] = Mesures.[N° Fiche] WHERE")))
	 (monordremes " ORDER BY Mesures.Date")
	 
	 (sqlorbite
	   (sql-server->mysql-server-syntax 
	   (string-append
	    "SELECT DISTINCTROW Coordonnées.Nom, Coordonnées.[N° Fiche], Coordonnées.[N° BD], Coordonnées.[N° ADS]"
	    ", Coordonnées.[Alpha 2000], Coordonnées.[Delta 2000], Coordonnées.mag1, Coordonnées.mag2, Coordonnées.Spectre"
	    ", Coordonnées.[N° HIP], Coordonnées.[Orb]"
	    ", orbite.Auteur, orbite.Année, orbite.référence, orbite.Période, orbite.[moyen mt], orbite.périastre"
	    ", orbite.[mi gd axe], orbite.notes, orbite.excentric, orbite.inclin, orbite.noeud, orbite.[noeud/péri]"
	    " FROM Coordonnées INNER JOIN orbite ON Coordonnées.[N° Fiche] = orbite.[N° Fiche] WHERE")))
	 (monordreorb " ORDER BY orbite.Année")
	 

	 ;; this SQL is endless on MySQL server:
	 ;; SELECT DISTINCTROW Coordonnées.Nom, Coordonnées.`N° Fiche`, Coordonnées.`N° BD`, Coordonnées.`N° ADS`, Coordonnées.`Alpha 2000`, Coordonnées.`Delta 2000`, Coordonnées.mag1, Coordonnées.mag2, Coordonnées.Spectre, Coordonnées.`N° HIP`, Coordonnées.`Orb`, Mesures.Réf, Références.Revue, Références.Titre FROM Coordonnées INNER JOIN (Mesures INNER JOIN Références ON Mesures.Réf = Références.refer) ON Coordonnées.`N° Fiche` = Mesures.`N° Fiche` GROUP BY Coordonnées.Nom, Coordonnées.`N° Fiche`, Coordonnées.`N° BD`, Coordonnées.`N° ADS`, Coordonnées.`Alpha 2000`, Coordonnées.`Delta 2000`, Coordonnées.mag1, Coordonnées.mag2, Coordonnées.Spectre, Coordonnées.`N° HIP`, Coordonnées.`Orb`, Mesures.Réf, Références.Revue, Références.Titre HAVING Coordonnées.Nom Like 'COU 1027' ORDER BY Références.Revue;
	 ;;
	 ;; must be replaced by:
	 ;;
	 ;; SELECT DISTINCTROW tmp.Nom,tmp.`N° Fiche`,tmp.`N° BD`, tmp.`N° ADS`, tmp.`Alpha 2000`, tmp.`Delta 2000`,tmp.mag1,tmp.mag2,tmp.Spectre,tmp.`N° HIP`,tmp.`Orb`,  tmp.Réf,Références.Titre FROM (SELECT DISTINCTROW Coordonnées.Nom, Mesures.Réf FROM Coordonnées INNER JOIN Mesures ON Coordonnées.`N° Fiche` = Mesures.`N° Fiche` WHERE Coordonnées.Nom Like 'a 426') tmp INNER JOIN Références ON tmp.Réf = Références.refer;
	 ;;
	 ;; SELECT DISTINCTROW tmp.Nom,tmp.`N° Fiche`, tmp.`N° BD`, tmp.`N° ADS`, tmp.`Alpha 2000`, tmp.`Delta 2000`,tmp.mag1,tmp.mag2,tmp.Spectre,tmp.`N° HIP`,tmp.`Orb`, tmp.Réf,Références.Revue,Références.Titre FROM (SELECT DISTINCTROW Coordonnées.Nom,Coordonnées.`N° Fiche`,Coordonnées.`N° BD`, Coordonnées.`N° ADS`, Coordonnées.`Alpha 2000`, Coordonnées.`Delta 2000`, Coordonnées.mag1, Coordonnées.mag2, Coordonnées.Spectre, Coordonnées.`N° HIP`, Coordonnées.`Orb`, Mesures.Réf FROM Coordonnées INNER JOIN Mesures ON Coordonnées.`N° Fiche` = Mesures.`N° Fiche` WHERE Coordonnées.Nom Like 'a 426') tmp INNER JOIN Références ON tmp.Réf = Références.refer;
	 ;;
	 ;;  SELECT DISTINCTROW tmp.Nom,tmp.Réf,Références.Titre FROM (SELECT DISTINCTROW Coordonnées.Nom, Mesures.Réf FROM Coordonnées INNER JOIN Mesures ON Coordonnées.`N° Fiche` = Mesures.`N° Fiche` WHERE Coordonnées.Nom Like 'a 426') tmp INNER JOIN Références ON tmp.Réf = Références.refer;
	 ;; (sqlrefere
	 ;;   (sql-server->mysql-server-syntax 
	 ;;   (string-append
	 ;;     "SELECT DISTINCTROW Coordonnées.Nom, Coordonnées.[N° Fiche], Coordonnées.[N° BD], Coordonnées.[N° ADS]"
	 ;;     ", Coordonnées.[Alpha 2000], Coordonnées.[Delta 2000], Coordonnées.mag1, Coordonnées.mag2, Coordonnées.Spectre"
	 ;;     ", Coordonnées.[N° HIP], Coordonnées.[Orb]"
	 ;;     ", Mesures.Réf, Références.Revue"
	 ;;     ", Références.Titre"
	 ;;     " FROM Coordonnées INNER JOIN (Mesures INNER JOIN Références ON"
	 ;;     " Mesures.Réf = Références.refer) ON Coordonnées.[N° Fiche] = Mesures.[N° Fiche]"
	 ;;     " GROUP BY Coordonnées.Nom, Coordonnées.[N° Fiche], Coordonnées.[N° BD], Coordonnées.[N° ADS]"
	 ;;     ", Coordonnées.[Alpha 2000], Coordonnées.[Delta 2000], Coordonnées.mag1, Coordonnées.mag2, Coordonnées.Spectre"
	 ;;     ", Coordonnées.[N° HIP], Coordonnées.[Orb]"
	 ;;     ", Mesures.Réf, Références.Revue"
	 ;;     ", Références.Titre HAVING")))

	 ;; (sqlrefere
	 ;;  "SELECT DISTINCTROW tmp.Nom,tmp.`N° Fiche`, tmp.`N° BD`, tmp.`N° ADS`, tmp.`Alpha 2000`, tmp.`Delta 2000`,tmp.mag1,tmp.mag2,tmp.Spectre,tmp.`N° HIP`,tmp.`Orb`, tmp.Réf,Références.Revue,Références.Titre FROM (SELECT DISTINCTROW Coordonnées.Nom,Coordonnées.`N° Fiche`,Coordonnées.`N° BD`, Coordonnées.`N° ADS`, Coordonnées.`Alpha 2000`, Coordonnées.`Delta 2000`, Coordonnées.mag1, Coordonnées.mag2, Coordonnées.Spectre, Coordonnées.`N° HIP`, Coordonnées.`Orb`, Mesures.Réf FROM Coordonnées INNER JOIN Mesures ON Coordonnées.`N° Fiche` = Mesures.`N° Fiche` WHERE Coordonnées.Nom Like 'a 426') tmp INNER JOIN Références ON tmp.Réf = Références.refer")

	 (sqlrefere "") ;; will be construct later

	 (sqlrefere-begin
	  "SELECT DISTINCTROW tmp.Nom,tmp.`N° Fiche`, tmp.`N° BD`, tmp.`N° ADS`, tmp.`Alpha 2000`, tmp.`Delta 2000`,tmp.mag1,tmp.mag2,tmp.Spectre,tmp.`N° HIP`,tmp.`Orb`, tmp.Réf,Références.Revue,Références.Titre FROM (SELECT DISTINCTROW Coordonnées.Nom,Coordonnées.`N° Fiche`,Coordonnées.`N° BD`, Coordonnées.`N° ADS`, Coordonnées.`Alpha 2000`, Coordonnées.`Delta 2000`, Coordonnées.mag1, Coordonnées.mag2, Coordonnées.Spectre, Coordonnées.`N° HIP`, Coordonnées.`Orb`, Mesures.Réf FROM Coordonnées INNER JOIN Mesures ON Coordonnées.`N° Fiche` = Mesures.`N° Fiche` WHERE")

	 (sqlrefere-end 
	   " GROUP BY Mesures.Réf) tmp INNER JOIN Références ON tmp.Réf = Références.refer GROUP BY tmp.Nom, tmp.`N° Fiche`, tmp.`N° BD`, tmp.`N° ADS`, tmp.`Alpha 2000`, tmp.`Delta 2000`, tmp.mag1, tmp.mag2, tmp.Spectre, tmp.`N° HIP`, tmp.`Orb`, Références.Revue, Références.Titre ")

	 (monordreref " ORDER BY Références.Revue")

	 (jresult::java.lang.String (java.lang.String-java.lang.String8 ""))
	 (result "")
	 (baratin "")
	 ;;(result-double #;::float 0.0)
	 (result-double '())
	 (result-double::double  0.0)
	 (result2::real 0.0)
	 (bs-result "")
	 (len-bs-result 0)
	 (str-result "")
	 (rd '())
	 (iresult 0)
	 (resulth 0) ;; hours
	 (resulth-str "") ;; hours string
	 (resultm 0) ;; minutes
	 (resultm-str "") ;; minutes string
	 (results 0) ;; seconds
	 (results-str "") ;; seconds string
	 (sign "") ;; signe
	 (aresult 0.0) ;; absolute value
	 (resultd 0)
	 (resultd-str "")
	 (resultmi 0)
	 (resultmi-str "")
	 )

    ;;(display-msg-symb-nl  "BiglooCode.scm :: ResultatMesuresF ::" nombreobjets ) ;; je sais pas pourquoi cette macro fais planter bigloo ici mais pas dans d'autres situations
    (display-var-nl "BiglooCode.scm :: ResultatMesuresF ::  nombreobjets = "  nombreobjets )
    ;;(eu.oca.bigloofunct.JavaForBigloo-bstringTojstring '()) ;;"hello boy")
    (display-var-nl "BiglooCode.scm :: ResultatMesuresF :: bstr_identificateur = " bstr_identificateur)
    (display-var-nl "BiglooCode.scm :: ResultatMesuresF :: bstr_objet = " bstr_objet)
    
    (display-var-nl "BiglooCode.scm :: ResultatMesuresF :: len_identificateur = " len_bstr_identificateur)
    (display-var-nl "BiglooCode.scm :: ResultatMesuresF :: (string? bstr_identificateur) = " (string? bstr_identificateur))
    ;;(eu.oca.bigloofunct.JavaForBigloo-bstring->jstring "hello boy")
   
    (set! res (string-append
	       "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">
               <html>
                     <head>
                            <meta http-equiv=\"Content-Type\" content=\"text/html; charset=" char-set "\">
                            <meta name=\"GENERATOR\" content=\"Microsoft FrontPage 5.0\">
                            <title>SIDONIe-Résultats : identifications et mesures</title>
                     </head>
                     <LINK rel=\"stylesheet\" href=\"../Style.css\" type=\"text/css\">
               <body>"))


    ;;(set! identificateur  ($bstring->string bstr_identificateur))
    (set! identificateur bstr_identificateur)
    ;;(set! identificateur  (string-append bstr_identificateur))

    ;;(display-var-nl "BiglooCode.scm :: ResultatMesuresF :: (string-append \"\" bstr_identificateur) = "  (string-append "" bstr_identificateur))
    
    ;;(set! objet ($bstring->string bstr_objet))
    ;;(set! choixres ($bstring->string bstr_choixres)) 

    (set! choixres bstr_choixres) 

    (display-var-nl "BiglooCode.scm :: ResultatMesuresF :: identificateur = " identificateur)
    (display-var-nl "BiglooCode.scm :: ResultatMesuresF :: (string? identificateur) = " (string? identificateur))
  
    (display (string-append "TEST "  identificateur))
    (newline)

    (set!  essai (string-append "TEST "  identificateur))
    (display essai)
    (newline)

    (display-var-nl "BiglooCode.scm :: ResultatMesuresF :: essai = " essai)
    (display-var-nl "BiglooCode.scm :: ResultatMesuresF :: identificateur = " identificateur)
    (display-var-nl "BiglooCode.scm :: ResultatMesuresF :: (string? essai) = " (string? essai))
    
    (display-var-nl "BiglooCode.scm :: ResultatMesuresF :: (string=?  identificateur \"\" ) = "  (string=?  identificateur ""))


     ;; database driver search
    
    (newline)

    (if dyna 
	(begin
	  (eu.oca.DataBase-searchDriverDynamic db)

	  (eu.oca.DataBase-connectDynamic db)

	  ;;(eu.oca.DataBase-connectDynamic db) ;; testing fool proof overconnections

	  (eu.oca.DataBase-createStatementDynamic db) ;; i put the statement it if it's true it can be reused for multiple SQL queries

	  )
	(begin 
	  (eu.oca.DataBase-searchDriverStatic)

	  (eu.oca.DataBase-connectStatic)

	  ;;(eu.oca.DataBase-connectStatic) ;; testing fool proof overconnections

	  (eu.oca.DataBase-createStatementStatic) ;; i put the statement here if it's true it can be reused for multiple SQL queries
	  ))

    (newline)

    (when (string-null? identificateur) ;;(string=? identificateur "") ;;(when (equal? identificateur "")
	  (set! flagerreur 1)
	  (set! baraterreur (string-append baraterreur " Vous devez choisir un identificateur ! ")))
	
    (when (string-null? objet)
	  (set! flagerreur 1)
	  (set! baraterreur (string-append baraterreur  " Vous devez spécifier un nom d'objet ! ")))

    (when (string-null? choixres)
	  (set! flagerreur 1)
	  (set! baraterreur (string-append baraterreur  " Vous devez choisir un type d'information ! ")))

   
    (cond
     ((string=? identificateur "Nom")
	 (set! monchoix (string-append " Coordonnées.Nom Like '" objet "'"))
	 (when (= flagerreur 0)
	       (set! flagnom 1)
	       (set! requetexiste (string-append "SELECT DISTINCTROW Coordonnées.Nom FROM Coordonnées WHERE Coordonnées.Nom Like '" objet "'"))
	       (set! jstr (eu.oca.bigloofunct.JavaForBigloo-bstring->jstring requetexiste))
	       
	       (if dyna
		   (begin
		     (eu.oca.DataBase-executeQueryDynamic db jstr)
		     (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (eu.oca.DataBase-getval db)")
		     (eu.oca.DataBase-getval db)
		     (display-nl  "BiglooCode.scm :: ResultatMesuresF :: passed")
		     (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (eu.oca.DataBase-getresultSet db)")
		     (eu.oca.DataBase-getresultSet db)
		     (display-nl  "BiglooCode.scm :: ResultatMesuresF :: passed")
		     ;; (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (%jresultset-next (eu.oca.DataBase-getresultSet db))")
		     ;; (%jresultset-next (eu.oca.DataBase-getresultSet db))
		     (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (java.sql.ResultSet-next (eu.oca.DataBase-getresultSet db))")
		     (java.sql.ResultSet-next (eu.oca.DataBase-getresultSet db))

		     (display-nl  "BiglooCode.scm :: ResultatMesuresF :: passed")
		     (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (eu.oca.DataBase-val db)")
		     (eu.oca.DataBase-val db)
		     (display-nl  "BiglooCode.scm :: ResultatMesuresF :: passed")
		     (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (eu.oca.DataBase-resultSet db)")
		     (eu.oca.DataBase-resultSet db)
		     (display-nl  "BiglooCode.scm :: ResultatMesuresF :: passed")
		     ;; (%jresultset-next (eu.oca.DataBase-resultSet db))
		     ;; (display-nl  "BiglooCode.scm :: ResultatMesuresF :: before let")
		     ;; (let ((reset (eu.oca.DataBase-resultSet db)))
		     ;;   ;;(%jresultset-next reset)
		     ;;   (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (%jresultset-last reset)")
		     ;;   (%jresultset-last reset)
		     ;;   (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (set! nombreobjets (%jresultset-getRow reset))")
		     ;;   (set! nombreobjets (%jresultset-getRow reset))
		     ;;   (display-msg-symb-nl  "BiglooCode.scm :: ResultatMesuresF ::" nombreobjets )
		     ;;   )
		     ;;(%jresultset-next (eu.oca.DataBase-resultSet db))
		     )
		   (begin
		     (eu.oca.DataBase-executeQueryStatic jstr) ;; equiv requetexiste
		     (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (java.sql.ResultSet-next eu.oca.DataBase-resultSet)")
		     (java.sql.ResultSet-next eu.oca.DataBase-resultSet)
		     (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (java.sql.ResultSet-last eu.oca.DataBase-resultSet)")

		     ;; this is for counting
		     (java.sql.ResultSet-last eu.oca.DataBase-resultSet)
		     (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (set! objetexiste (java.sql.ResultSet-getRow eu.oca.DataBase-resultSet))")
		     (set! objetexiste (java.sql.ResultSet-getRow eu.oca.DataBase-resultSet))
		     ;;(display-msg-symb-quote-nl  "BiglooCode.scm :: ResultatMesuresF ::" objetexiste )
		     ;;(display-msg-symb-nl  "BiglooCode.scm :: ResultatMesuresF ::" objetexiste ) ;; je sais pas pourquoi cette macro fais planter bigloo ici mais pas dans d'autres situations (symbol->string plante avec le front end java)
		     (display-var-nl "BiglooCode.scm :: ResultatMesuresF ::  objetexiste = "  objetexiste )
		     ;;(display-nl  "BiglooCode.scm :: ResultatMesuresF :: (%jresultset-next eu.oca.DataBase-resultSet)")
		     ;;(%jresultset-next eu.oca.DataBase-resultSet)
		     
		     ;; (display-nl  "BiglooCode.scm :: ResultatMesuresF :: testing (symbol->string 'blabla) :")
		     ;; (symbol->string 'blabla)
		     ;; (display-nl  "BiglooCode.scm :: ResultatMesuresF :: test done")

		     (java.sql.ResultSet-beforeFirst eu.oca.DataBase-resultSet)
		     ;; (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (set! nombreobjets (java.sql.ResultSet-beforeFirst eu.oca.DataBase-resultSet))")

		     (display-nl  "BiglooCode.scm :: ResultatMesuresF :: passed")
		     )
		   ) ;; end if dyna
	       
	       ;;(display-nl  "BiglooCode.scm :: ResultatMesuresF :: (eu.oca.DataBase-executeQueryStatic requeteuni)")
	       ;;(eu.oca.DataBase-executeQueryStatic requeteuni)
	       (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (eu.oca.DataBase-executeQueryStatic2args requeteuni2)")
	       (eu.oca.DataBase-executeQueryStatic2args requeteuni 2)
	       ;;(display-nl  "BiglooCode.scm :: ResultatMesuresF :: (java.sql.ResultSet-last eu.oca.DataBase-resultSet)")
	       ;;(java.sql.ResultSet-last eu.oca.DataBase-resultSet)
	       (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (java.sql.ResultSet-last rsuni)")
	       (java.sql.ResultSet-last rsuni)
	       ;; (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (set! nombreobjets (java.sql.ResultSet-getRow eu.oca.DataBase-resultSet))")
	       ;; (set! nombreobjets (java.sql.ResultSet-getRow eu.oca.DataBase-resultSet))
	       (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (set! nombreobjets (java.sql.ResultSet-getRow rsuni))")
	       (set! nombreobjets (java.sql.ResultSet-getRow rsuni))
	       (display-var-nl "BiglooCode.scm :: ResultatMesuresF ::  nombreobjets = "  nombreobjets )
			     
	       ;;(java.sql.ResultSet-beforeFirst eu.oca.DataBase-resultSet)
	       (java.sql.ResultSet-beforeFirst rsuni)
	       (display-nl  "BiglooCode.scm :: ResultatMesuresF :: passed-2")
	       
	       (when (> nombreobjets 1)
		     (set! flaguni 1))

	       (display-var-nl "BiglooCode.scm :: ResultatMesuresF ::  flaguni = "  flaguni)

	       (when (and (= objetexiste 0) (= nombreobjets 1))
		     (set! flagexiste 1))
	       
	       (display-var-nl "BiglooCode.scm :: ResultatMesuresF ::  flagexiste = "  flagexiste)

	       (when (and (= objetexiste 1) (>= nombreobjets 1))
		     (set! flagobjet 1))))

     ((string=? identificateur "N° ADS")
      (set! monchoix (sql-server->mysql-server-syntax (string-append " Coordonnées.[N° ADS] Like '" objet "'"))))
     
     ((string=? identificateur "N° BD")
      (set! monchoix (sql-server->mysql-server-syntax (string-append " Coordonnées.[N° BD] Like '" objet "'"))))

     ((string=? identificateur "N° HIP")
      (set! monchoix (sql-server->mysql-server-syntax (string-append  " Coordonnées.[N° HIP] Like '" objet "'"))))

     (else
      (display-var-nl "BiglooCode.scm :: ResultatMesuresF :: UNSUPPORTED CASE with identificateur =" identificateur)))

    ;;(display-nl  "BiglooCode.scm :: ResultatMesuresF :: forcing flagexiste = 1")
    ;;(set! flagexiste 1)

    ;;(display-nl  "BiglooCode.scm :: ResultatMesuresF :: forcing flaguni = 1")
    ;;(set! flaguni 1)

    (if (or (= flagerreur 1) (= flaguni 1) (= flagexiste 1))
	(begin
	  (when (= flagerreur 1)
		(set! res (string-append
			   res
		     "<h1 align=\"center\">
                          <font color=\"#0000FF\">SIDONIe - Résultats : Identifications et mesures</font>
                      </h1>
                      <div align=\"center\">
                          <center>
                                  <table width=\"85%\" border=\"3\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">
                                        <tr>
                                             <th width=\"80%\">
                                                 <font color=\"#0000FF\">"
                                                       baraterreur "<br>
                                                 </font>
                                             </th>
                                        </tr>
                                  </table>
                          </center>
                      </div>")))

	  
	  (when (= flagexiste 1)
		(set! res (string-append
			   res
		     "<h1 align=\"center\">
                          <font color=\"#0000FF\">SIDONIe - Résultats : Identifications et mesures</font>
                      </h1>
                      <div align=\"center\">
                          <center>
                                  <table width=\"85%\" border=\"3\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">
                                        <tr>
                                             <th width=\"80%\">
                                                 <font color=\"#0000FF\">"
                                                       baratexiste "<br>
                                                 </font>
                                             </th>
                                        </tr>
                                  </table>
                          </center>
                      </div>
		      <P>
                      <P>
                      <table border=\"1\" cellpadding=\"0\" align=\"center\" cellspacing=\"0\" width=\"20%\" >
                      <tr>
                          <th><font color=\"#000080\" > Objets </font></th>
                      </tr>"))

		(java.sql.ResultSet-first rsuni)
		
		(display-nl  "BiglooCode.scm :: ResultatMesuresF :: nom :: (when (= flagexiste 1) :: before loop !")
		
		(letrec ((resultat "UN RESULTAT")
			 (loop (lambda ()
				 (if (java.sql.ResultSet-isAfterLast rsuni)
				     '()
				     (let ((jresultat::java.lang.String #;(java.lang.String-java.lang.String8 "a result") (java.sql.ResultSet-getString2 rsuni 0))
					   (bstr_tmp '()))
				       (display-nl  "BiglooCode.scm :: ResultatMesuresF :: before (set! bstr_tmp (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresultat))")
				       (set! bstr_tmp (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresultat)) 
				       (display-nl  "BiglooCode.scm :: ResultatMesuresF :: before (set! resultat jresultat)")
				       (set! resultat bstr_tmp) ;; a revoir quand utilise (convertir avec une procedure java en byte char puis scheme string je pense)
				       (display-var-nl   "BiglooCode.scm :: ResultatMesuresF :: resultat = " resultat)
				       (when (string-null? resultat)
					     (set! resultat "&nbsp;"))
				       (set! res (string-append
						  res
						  "<tr>
                                                       <td>"
						             (string-upcase resultat) " &nbsp;
                                                       </td>
                                                   </tr>"))
				       (java.sql.ResultSet-next rsuni)
				       (display-nl  "BiglooCode.scm :: ResultatMesuresF :: looping !")
				       (loop))))))
		  (loop))
		  

		;; (let loop ((l '(1 2 3)))
		;;   (if (java.sql.ResultSet-isAfterLast rsuni)
		;;       '()
		;;       (begin
		;; 	(set! res (string-append
		;; 		   res
		;; 		   " A "))
		;; 	(java.sql.ResultSet-next rsuni)
		;; 	(loop))))

		(set! res (string-append
			   res
			   "</table>"))

		) ;; (when (= flagexiste 1)


	  (when (= flaguni 1)
		(proc-barat baratuni rsuni))

	  (display-nl  "BiglooCode.scm :: ResultatMesuresF :: before (when (and (= flagerreur 0) (= flagobjet 0) (= flagnom 1))")
	  (when (and (= flagerreur 0) (= flagobjet 0) (= flagnom 1))
		(set! rsexiste eu.oca.DataBase-resultSet)
		(java.sql.ResultSet-close rsexiste)
	      
		;;(set! rsexiste (class-nil rsexiste))
		;; (display-nl  "BiglooCode.scm :: ResultatMesuresF :: before (class-nil rsexiste)")
		;; (class-nil rsexiste) ;; au cas marche pas utiliser la fonction java setResultSetNull
		(display-nl  "BiglooCode.scm :: ResultatMesuresF :: before (eu.oca.DataBase-setResultSetNull)")
		(eu.oca.DataBase-setResultSetNull)

		;; (java.sql.ResultSet-close rsuni)
		;; (class-nil rsuni)
		(display-nl  "BiglooCode.scm :: ResultatMesuresF :: before (eu.oca.DataBase-setResultSet2Null)")
		(eu.oca.DataBase-setResultSet2Null)
		)
	  
	  ) ;; begin

	;; else du (if (or (= flagerreur 1) (= flaguni 1) (= flagexiste 1))
	
	(begin
	  (when (= flagobjet 1)
	      (proc-barat baratobjet rsuni))

	  (when (= flagnom 1)
		(set! rsexiste eu.oca.DataBase-resultSet)
		(java.sql.ResultSet-close rsexiste)

		;;(display-nl  "BiglooCode.scm :: ResultatMesuresF :: before (set! rsexiste (class-nil rsexiste))")
		;;(set! rsexiste (class-nil rsexiste))
		;;(display-nl  "BiglooCode.scm :: ResultatMesuresF :: before (class-nil rsexiste)")
		;;(class-nil rsexiste) ;; au cas marche pas utiliser la fonction java setResultSetNull		
		(display-nl  "BiglooCode.scm :: ResultatMesuresF :: before (eu.oca.DataBase-setResultSetNull)")
		(eu.oca.DataBase-setResultSetNull)

		;; (java.sql.ResultSet-close rsuni)
		;; (class-nil rsuni)

		(display-nl  "BiglooCode.scm :: ResultatMesuresF :: before (eu.oca.DataBase-setResultSet2Null)")
		(eu.oca.DataBase-setResultSet2Null))


	  (display-nl  "BiglooCode.scm :: ResultatMesuresF :: choixres =")
	  (display choixres)
	  (newline)

	  ;; un COND assez gros ..... correspond au case du code ASP
	  
	  (cond
	   
	   ((string=?  choixres "Ident")
	    
	    (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (cond : Ident")

	    (set! marequete (string-append marequete monchoix monordremes))

	     ;; (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (eu.oca.DataBase-executeQueryStaticStringString
	     ;;  (java.lang.String-java.lang.String8 marequete)
	     ;;  (java.lang.String-java.lang.String8 \"Requete\")))")
	     ;; (eu.oca.DataBase-executeQueryStaticStringString
	     ;;  (java.lang.String-java.lang.String8 marequete)
	     ;;  (java.lang.String-java.lang.String8 "Requete"))

	     (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (eu.oca.DataBase-executeQueryStatic (java.lang.String-java.lang.String8 marequete))")
	     (eu.oca.DataBase-executeQueryStatic
	      (java.lang.String-java.lang.String8 marequete))
	     
	     (set! res (string-append res "<h1 align=\"center\"><font color=\"#0000FF\"> SIDONIe - Identifications et mesures </font></h1>"))




	     ;;(java.sql.ResultSet-first rs)

	     (if (not (java.sql.ResultSet-first rs))
	     
		 (then-block ;; empty result set

		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF :  empty result set"))
		  (set! baratin "Cet objet n'existe pas dans la base ou est mal orthographié !")
		  (set! flagerreur 1))
		 
		 (else-block

		  (set! jresult (java.sql.ResultSet-getString2 rs 1))
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result = " result))
	     
		  (display "BiglooCode.scm :: ResultatMesuresF : = (java.sql.ResultSet-wasNull rs) 1 :")
		  (display (java.sql.ResultSet-wasNull rs))
		  (newline)

		  ;; TODO verifier que en cas de result set null ca plante pas (comportement different en ASP de rs que en java) cd cas orbite qui est ok

		  (when (and (string-null? result) (string=? identificateur "Nom"))
			(set! baratin "Cet objet n'existe pas dans la base ou est mal orthographié !")
			(set! flagerreur 1))



		  (set! bs-result (eu.oca.bigloofunct.JavaForBigloo-jdouble->bstring (eu.oca.bigloofunct.JavaForBigloo-pi2dec)))
		  (display "BiglooCode.scm :: ResultatMesuresF : bs-result = ")
		  (display bs-result)
		  (newline)

		  (set! bs-result (eu.oca.bigloofunct.JavaForBigloo-jdouble->bstring (java.sql.ResultSet-getDouble2 rs 3)))
		  (display "BiglooCode.scm :: ResultatMesuresF : bs-result =")
		  (display bs-result)
		  (display "|")
		  (newline)
		  (display "BiglooCode.scm :: ResultatMesuresF : = (java.sql.ResultSet-wasNull rs) 3 :")
		  (display (java.sql.ResultSet-wasNull rs))
		  (newline)

		  ;; (set! len-bs-result (byte*-length bs-result))
		  ;; (display-var-nl "BiglooCode.scm :: ResultatMesuresF : len-bs-result = " len-bs-result)
		  ;; (set! bs-result (make-string len-bs-result))
		  ;; (set! bs-result (eu.oca.bigloofunct.JavaForBigloo-jdouble->bstring (java.sql.ResultSet-getDouble2 rs 3)))
		  ;; (display "BiglooCode.scm :: ResultatMesuresF : bs-result = ")
		  ;; (display bs-result)
		  ;; (newline)

		  (display-nl "BiglooCode.scm :: ResultatMesuresF : before  (set! result-double .....)")
		  ;;(set! result-double (java.sql.ResultSet-getDouble2 rs 3))
		  (set! result-double (eu.oca.bigloofunct.JavaForBigloo-pi2dec))
		  ;; (set! result-double (eu.oca.bigloofunct.JavaForBigloo-piFloat))
		  ;; (display-nl "BiglooCode.scm :: ResultatMesuresF : before  (set! result2 .......)")
		  ;; (set! result2 (+fl result-double 0.0))
		  ;; (display "BiglooCode.scm :: ResultatMesuresF : result2 = ")
		  ;; (display result2)
		  ;; (newline)
		  ;; (display-nl "BiglooCode.scm :: ResultatMesuresF : before display")
		  (display "BiglooCode.scm :: ResultatMesuresF : result-double = ")
		  ;;(display result-double)
		  ;;(printf "~a" result-double)
		  ;;(printf "~s" result-double)
		  (display (double->ieee-string result-double))
		  (newline)
		  ;;(display (real->string result-double))
		  ;;(newline)
		  ;;(display-nl "BiglooCode.scm :: ResultatMesuresF : before display-var-nl")
		  ;;(display-var-nl "BiglooCode.scm :: ResultatMesuresF : result-double = " result-double)
		  (display-var-nl "BiglooCode.scm :: ResultatMesuresF :: (string? bs-result) = " (string? bs-result))
	     
		  ;; (display "BiglooCode.scm :: ResultatMesuresF : (display (string->real bs-result)) =")
		  ;; (newline)
		  ;; (display (string->number (string-append " " bs-result)))
		  ;; (newline)
	     
		  (set! result-double (string->real bs-result))
	     
		  (set! str-result bs-result)

		  (let* ((sp (string-split str-result "."))
			 (irss (car sp))
			 (frss (cadr sp))
			 (irs (string->number irss))
			 (frs (string->number frss))
			 (len-frss (string-length frss))
			 (expo (expt 10 len-frss))
			 (frc-rs (/ frs expo))
			 (rsf (+ irs frc-rs))
			 )
		    (display-var-nl "BiglooCode.scm :: ResultatMesuresF : irss = " irss)
		    (display-var-nl "BiglooCode.scm :: ResultatMesuresF : frss = " frss)
		    (display-var-nl "BiglooCode.scm :: ResultatMesuresF : irs = " irs)
		    (display-var-nl "BiglooCode.scm :: ResultatMesuresF : frs = " frs)
		    ;;(display-var-nl "BiglooCode.scm :: ResultatMesuresF : rsf = " rsf)
		    (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL rsf)
		    )
		  
		  (display  "BiglooCode.scm :: ResultatMesuresF : (real? result-double) =")
		  (display (real? result-double))
		  (newline)
		  (set! result2 result-double)
		  ;;(set! str-result (real->string result2))
		  ;;(+ result-double 1)
		  ;;(display result2)
		  ;;(real->string result2)


		  ) ;; fin else
		 ) ;; fin if test empty set
 



	     (if (not (java.sql.ResultSet-first rs))
	     
		 (then-block ;; empty result set


		  (when (and (java.sql.ResultSet-wasNull rs) (string=? identificateur "N° BD"))
			(set! baratin "Cet objet n'existe pas dans la base ou son N° BD est mal orthographié !")
			(set! flagerreur 1)))
		 (else-block
		  (set! jresult (java.sql.ResultSet-getString2 rs 3))
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 3 = " result))))
		 

	     (if (not (java.sql.ResultSet-first rs))
	     
		 (then-block ;; empty result set

		  (when (and  (string-null? result)  (string=? identificateur "N° BD"))
			(set! baratin "Cet objet n'existe pas dans la base ou son N° BD est mal orthographié !")
			(set! flagerreur 1)))

		 (else-block
		  
		  (set! bs-result (eu.oca.bigloofunct.JavaForBigloo-jdouble->bstring (java.sql.ResultSet-getDouble2 rs 4)))
		  (display "BiglooCode.scm :: ResultatMesuresF : bs-result 4 =")
		  (display bs-result)
		  (display "|")
		  (newline)
		  
		  (display "BiglooCode.scm :: ResultatMesuresF : = (java.sql.ResultSet-wasNull rs) 4 :")
		  (display (java.sql.ResultSet-wasNull rs))
		  (newline)
		  ) ;; fin else
		 ) ;; fin if test empty set
 

	     (if (not (java.sql.ResultSet-first rs))
	     
		 (then-block ;; empty result set
	     
		  (when (and (java.sql.ResultSet-wasNull rs) (string=? identificateur "N° ADS"))
			(set! baratin "Cet objet n'existe pas dans la base ou son N° ADS est mal orthographié !")
			(set! flagerreur 1)))

		 (else-block
		  (set! jresult (java.sql.ResultSet-getString2 rs 4))
	     
		  (when (not (java.sql.ResultSet-wasNull rs))
			(set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			(display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 4 = " result)))
		  ) ;; fin else
		 ) ;; fin if test empty set
 
		
	     (if (not (java.sql.ResultSet-first rs))
	     
		 (then-block ;; empty result set

		  (when (and  (string-null? result) (string=? identificateur "N° ADS"))
			(set! baratin "Cet objet n'existe pas dans la base ou son N° ADS est mal orthographié !")
			(set! flagerreur 1)))
		 
		 (else-block

		  ;; (set! bs-result (eu.oca.bigloofunct.JavaForBigloo-jdouble->bstring (java.sql.ResultSet-getDouble2 rs 9)))
		  ;; (display "BiglooCode.scm :: ResultatMesuresF : bs-result 9 =")
		  ;; (display bs-result)
		  ;; (display "|")
		  ;; (newline)

	     
		  (set! jresult (java.sql.ResultSet-getString2 rs 10))
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 10 = " result))

		  
		  (display "BiglooCode.scm :: ResultatMesuresF : = (java.sql.ResultSet-wasNull rs) 10 :")
		  (display (java.sql.ResultSet-wasNull rs))
		  (newline)))

	     
	     (when (not (java.sql.ResultSet-first rs))
		   (when (and (java.sql.ResultSet-wasNull rs) (string=? identificateur "N° HIP"))
			 (set! baratin "Cet objet n'existe pas dans la base ou son N° HIP est mal orthographié !")
			 (set! flagerreur 1))
		   
		   (when (and  (string-null? result) (string=? identificateur "N° HIP"))
			 (set! baratin "Cet objet n'existe pas dans la base ou son N° HIP est mal orthographié !")
			 (set! flagerreur 1)))
	     
		



	     (if (equal? flagerreur 1)
		 
		   (set! res (string-append
			      res
			    "<div align=\"center\">
                                  <center>
                                           <table width=\"85%\" border=\"3\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">
                                             <tr>
                                                 <th width=\"82%\">
                                                     <font color=\"#0000FF\">"
			                                 baratin "<br>
                                                     </font>
                                                 </th>
                                             </tr>
                                           </table>
                                 </center>
                           </div>
                           <P>
                           <P>"))

		
		   (begin  ;; else du if
		     (set! res (string-append
			    res
			    "<div align=\"center\">
                                  <center>
                                          <table width=\"85%\" border=\"3\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">
                                                <tr>
                                                     <th>
                                                          <font color=\"#0000FF\"> Objet <br></font>"
			                                   (field-result-set rs 1)
			                             "</th>"
		                                            "<td align=\"center\"><font color=\"#0000FF\"> N° BD<br></font>"
							    (field-result-set-lowercase rs 3)
							    "</td>"
							    "<td align=\"center\"><font color=\"#0000FF\"> N° ADS<br></font>"
							    (field-result-set-lowercase rs 4)
							    "</td>"
							    "<td align=\"center\"><font color=\"#0000FF\"> N° HIP<br></font>"
							    (field-result-set-lowercase-check-star rs 10)
							    "</td>"
							    "<td align=\"center\"><font color=\"#0000FF\">  Type Spectral<br></font>"
							    (field-result-set-lowercase-check-minus rs 9)
							    "</td>
                                               </tr>
					       <tr>
                                                    <td align=\"center\"><font color=\"#0000FF\"> Alpha 2000<br>"
							    (begin

							      (set! result-double (java.sql.ResultSet-getDouble2 rs 5))
							      ;; (display  "BiglooCode.scm :: ResultatMesuresF : result-double =")
							      ;; (display result-double)
							      ;; (newline)

							      (if (java.sql.ResultSet-wasNull rs)
								  (set! result "&nbsp;")
								  (begin ;; else
								    (set! iresult (floor result-double))
								    (display  "BiglooCode.scm :: ResultatMesuresF : (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL iresult) = ")
								    (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL iresult)


								    ;; (display  "BiglooCode.scm :: ResultatMesuresF : iresult =")
								    ;; (display iresult)
								    ;; (newline)

								    (set! resulth (fix (/ iresult 1000)))

								    (display  "BiglooCode.scm :: ResultatMesuresF : (integer? resulth) =")
								    (display (integer? resulth))
								    (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresF : (bignum? resulth) =")
								    (display (bignum? resulth))
								    (newline)

								    ;; (display  "BiglooCode.scm :: ResultatMesuresF :  (eu.oca.bigloofunct.JavaForBigloo-displayInt resulth) =")
								    ;; (newline)
								    ;; (eu.oca.bigloofunct.JavaForBigloo-displayInt resulth)
								    ;; (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresF : resulth 1 =")
								    (display resulth)
								    (newline)

								    (display-nl  "BiglooCode.scm :: ResultatMesuresF : before change code 1")

								    (set! resulth-str #;"result will be here" #;(number->string resulth) (num->string resulth))

								    (display-nl  "BiglooCode.scm :: ResultatMesuresF : after change code 1")

								    (set! resultm (- iresult (* resulth 1000)))
								    (set! resultm (fix (/ resultm 10)))

								    (display  "BiglooCode.scm :: ResultatMesuresF : (integer? resultm) =")
								    (display (integer? resultm))
								    (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresF : (bignum? resultm) =")
								    (display (bignum? resultm))
								    (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresF : resultm =")
								    (display resultm)
								    (newline)

								    (set! resultm-str (num->string resultm))
								    (display  "BiglooCode.scm :: ResultatMesuresF : resultm-str =")
								    (display resultm-str)
								    (newline)
								    
								    (set! results (- iresult (* resulth 1000) (* resultm 10)))
								    
								    (display  "BiglooCode.scm :: ResultatMesuresF : (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL results) = ")
								    (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL results)

								    ;; (display  "BiglooCode.scm :: ResultatMesuresF : results =")
								    ;; (display results)
								    ;; (newline)
								    
								    (set! results-str (num->string (fix results)))
								    
								    (display  "BiglooCode.scm :: ResultatMesuresF : results-str =")
								    (display results-str)
								    (newline)

								    (when (< resulth 1)
									  (set! resulth-str "00"))
								    (display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (< resulth 1)")

								    (when (and (>= resulth 1) (< resulth 10))
									  (set! resulth-str (string-append "0" resulth-str)))

								    (display-nl  "BiglooCode.scm :: ResultatMesuresF : passed  (and (>= resulth 1) (< resulth 10)")
								    (when (< resultm 10)
									  (set! resultm-str (string-append "0" resultm-str)))

								    (display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (< resultm 10)")

								    (set! result (string-append resulth-str " h " resultm-str "." results-str " mn"))))
							      (string-append "</font>" result "</td>")) ;; end begin
							   

						      "<td align=\"center\"><font color=\"#0000FF\"> Delta 2000<br>"

						        (begin

							  (set! result-double (java.sql.ResultSet-getDouble2 rs 6))
							  ;; (set! result2 result-double)
							  ;; (display  "BiglooCode.scm :: ResultatMesuresF : result2 =")
							  ;; (newline)
							  ;; (display (real->string result2))
							  ;; (newline)
							  (display  "BiglooCode.scm :: ResultatMesuresF : (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL result-double) = ")
							  (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL result-double)

							  (if (java.sql.ResultSet-wasNull rs)
							      "&nbsp;"
							      (begin ;; else
								(if (< result-double 0)
								    (set! sign "-")
								    (set! sign "&nbsp;"))
								(set! aresult (abs result-double))
								(set! resultd (fix (/ aresult 100)))
								(set! resultd-str (num->string resultd))
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (set! resultd-str (num->string resultd))")
								(set! resultmi (- aresult (* resultd 100)))
								(set! resultmi-str (num->string  (fix resultmi)))
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (set! resultmi-str (num->string (fix  resultmi)))")
								(when (< resultd 1)
								    (set! resultd-str "00"))
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed  (set! resultd-str \"00\")")
								(when (and (>= resultd 1) (< resultd 10))
								      (set! resultd-str (string-append "0" resultd-str)))
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (when (and (>= resultd 1) (< resultd 10)) ......")
								(when (< resultmi 10)
								      (set! resultmi-str (string-append "0" resultmi-str)))
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (when (< resultmi 10) .....")
								(set! result (string-append sign resultd-str " ° " resultmi-str " '"))
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (set! result (string-append sign resultd-str ....")
								(display  "BiglooCode.scm :: ResultatMesuresF : result =")
								(display result)
								(newline)
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed display")
								) ;; end begin else
							      ) ;; end if (java.sql.ResultSet-wasNull rs)
							  (string-append "</font>" result "</td>")) ;; end begin

							"<td align=\"center\"><font color=\"#0000FF\"> mag 1<br>"
							
							(begin
							  (set! jresult (java.sql.ResultSet-getString2 rs 7))
							  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
							  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 7 = " result))

							  (when (java.sql.ResultSet-wasNull rs)
								(set! result "&nbsp;"))

							  (when (string=? result "00.")
								(set! result "&nbsp;"))

							  (string-append "</font>" result "</td>"))

							"<td align=\"center\"><font color=\"#0000FF\"> mag 2<br>"
							
							(begin
							  (set! jresult (java.sql.ResultSet-getString2 rs 8))
							  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
							  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 8 = " result))

							  (when (java.sql.ResultSet-wasNull rs)
								(set! result "&nbsp;"))

							  (when (string=? result "00.")
								(set! result "&nbsp;"))

							  (string-append "</font>" result "</td>"))

							"<td align=\"center\"><font color=\"#0000FF\"> Orbite calculée ?<br>"
							
							(begin
							  (set! jresult (java.sql.ResultSet-getString2 rs 11))
							  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
							  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 11 = " result))

							  (when (java.sql.ResultSet-wasNull rs)
								(set! result "&nbsp;"))

							  (when (string=? result "*")
								(set! result "NON"))

							  (string-append "</font>" result "</td>"))

					        "</tr>
                                         </table>
                                     </center>
                               </div>"
			       ) ;; end de string-append , bizarre emacs le voit pas 
			   ) ;; end (set! res ...


		     (set! res (string-append
			    res
		       "<P>
                        <P>
                        <table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">
                            <tr>
                                <th><font color=\"#000080\"> Date </font></th>
                                <th><font color=\"#000080\"> Angle </font></th>
                                <th><font color=\"#000080\"> Sépar. </font></th>
                                <th><font color=\"#000080\"> Nuits </font></th>
                                <th><font color=\"#000080\"> Code </font></th>
                                <th><font color=\"#000080\"> Instr. </font></th>
                                <th><font color=\"#000080\"> Dim. </font></th>
                                <th><font color=\"#000080\"> Réf. </font></th>
                                <th><font color=\"#000080\"> Notes </font></th>
                            </tr>"))


		 ;; (let loop ((l '(1 2 3)))
		 ;;   (if (java.sql.ResultSet-isAfterLast rsuni)
		 ;;       '()
		 ;;       (begin
		 ;; 	 (set! res (string-append
		 ;; 		    res
		 ;; 		    " A "))
		 ;; 	 (java.sql.ResultSet-next rsuni)
		 ;; 	 (loop))))
		 
		 (java.sql.ResultSet-first rs) ;; rs.movefirst

		 (let loop ((end-flag (java.sql.ResultSet-isAfterLast rs)))
		   (when (not end-flag) ;; not rs.eof
			 (set! res (string-append res "<tr>"))

			 (set! jresult (java.sql.ResultSet-getString2 rs 12))
			 (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 12 = " result))
			 (when (java.sql.ResultSet-wasNull rs)
			       (set! result "&nbsp;"))
			 (set! res (string-append res "<td>" result " &nbsp;</td>"))

			 (set! jresult (java.sql.ResultSet-getString2 rs 13))
			 (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 13 = " result))
			 (when (java.sql.ResultSet-wasNull rs)
			       (set! result "&nbsp;"))
			 (set! res (string-append res "<td>" result " &nbsp;</td>"))

			 (set! jresult (java.sql.ResultSet-getString2 rs 14))
			 (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 14 = " result))
			 (when (java.sql.ResultSet-wasNull rs)
			       (set! result "&nbsp;"))
			 (set! res (string-append res "<td>" result " &nbsp;</td>"))

			 (set! result (number->string (java.sql.ResultSet-getInt2 rs 15)))
			 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 15 = " result))
			 (when (java.sql.ResultSet-wasNull rs)
			     (set! result "&nbsp;"))
			 (set! res (string-append res "<td>" result " &nbsp;</td>"))

			 (set! jresult (java.sql.ResultSet-getString2 rs 16))
			 (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 16 = " result))
			 (if (java.sql.ResultSet-wasNull rs)
			     (set! result "&nbsp;")
			     (set! result (string-upcase result)))
			 (set! res (string-append res "<td>" result " &nbsp;</td>"))

			 (set! jresult (java.sql.ResultSet-getString2 rs 18))
			 (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 18 = " result))
			 (when (java.sql.ResultSet-wasNull rs)
			       (set! result "&nbsp;"))
			 (when (string=? result "t")
			       (set! result (string-upcase result)))
			 (when (string=? result "l")
			       (set! result (string-upcase result)))
			 (set! res (string-append res "<td>" result " &nbsp;</td>"))

			 (set! jresult (java.sql.ResultSet-getString2 rs 17))
			 (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 17 = " result))
			 (when (java.sql.ResultSet-wasNull rs)
			       (set! result "&nbsp;"))
			 (set! res (string-append res "<td>" result " &nbsp;</td>"))
			 
			 (set! jresult (java.sql.ResultSet-getString2 rs 19))
			 (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 19 = " result))
			 (if (java.sql.ResultSet-wasNull rs)
			     (set! result "&nbsp;")
			     (set! result (string-upcase result)))
			 (set! res (string-append res "<td>" result " &nbsp;</td>"))

			 (set! jresult (java.sql.ResultSet-getString2 rs 20))
			 (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 20 = " result))
			 (when (or (java.sql.ResultSet-wasNull rs) (string-null? result))
			       (set! result "&nbsp;"))
			 (set! res (string-append res "<td>" result " &nbsp;</td></tr>"))

			 (java.sql.ResultSet-next rs) ;; rs.Movenext
			 (loop (java.sql.ResultSet-isAfterLast rs)))) ;; Loop
		 
		 (set! res (string-append
			    res
			    "</table>"))
		 
		 ) ;; end (begin ... du else du if
		   
	       ) ;; end (if (equal? flagerreur 1) ..... else   begin ...

	     ) ;;  fin cas dans COND : ((string=?  choixres "Ident")

	   ((string=?  choixres "Orbite")

	    (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (cond : Orbite")

	    (set! sqlorbite (string-append sqlorbite monchoix monordreorb))

	    ;; (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (eu.oca.DataBase-executeQueryStaticStringString
	    ;;   (java.lang.String-java.lang.String8 sqlorbite)
	    ;;   (java.lang.String-java.lang.String8 \"Orbite\")))")
	    ;; (eu.oca.DataBase-executeQueryStaticStringString
	    ;;   (java.lang.String-java.lang.String8 sqlorbite)
	    ;;   (java.lang.String-java.lang.String8 "Orbite"))

	    (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (eu.oca.DataBase-executeQueryStatic (java.lang.String-java.lang.String8 sqlorbite))")
	    (eu.oca.DataBase-executeQueryStatic (java.lang.String-java.lang.String8 sqlorbite))

	    (set! res (string-append res "<h1 align=\"center\"><font color=\"#0000FF\"> SIDONIe - Paramètres des orbites</font></h1>"))

	    (display "BiglooCode.scm :: ResultatMesuresF : = (java.sql.ResultSet-wasNull rs):")
	    (display (java.sql.ResultSet-wasNull rs))
	    (newline)

	    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : flagerreur = " (number->string flagerreur)))

	    (if (not (java.sql.ResultSet-first rs))
		(then-block ;; empty result set
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF :  empty result set"))
		  (set! baratin "Cet objet n'a pas d'orbite calculée !")
		  (set! flagerreur 1))
		(else-block
		  (set! jresult (java.sql.ResultSet-getString2 rs 1))
		  (display-wasnull rs)
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 1 = " result))
		  
		  (when (and (string-null? result) (string=? identificateur "Nom"))
			(set! baratin "Cet objet n'a pas d'orbite calculée !")
			(set! flagerreur 1))))


	    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : flagerreur 1 = " (number->string flagerreur)))

	    (if (not (java.sql.ResultSet-first rs))
		(then-block ;; empty result set
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF :  empty result set"))
		  (set! baratin "Cet objet n'a pas d'orbite calculée !")
		  (set! flagerreur 1))
		(else-block
		 (set! jresult (java.sql.ResultSet-getString2 rs 3))
		 (display-wasnull rs)
		 (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 3 = " result))
		 (when (and (string-null? result) (string=? identificateur "N° BD"))
		       (set! baratin "Cet objet n'a pas d'orbite calculée !")
		       (set! flagerreur 1))))

	    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : flagerreur 3 = " (number->string flagerreur)))


	    (if (not (java.sql.ResultSet-first rs))
		(then-block ;; empty result set
		 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF :  empty result set"))
		  (set! baratin "Cet objet n'a pas d'orbite calculée !")
		  (set! flagerreur 1))
		(else-block
		 (set! jresult (java.sql.ResultSet-getString2 rs 4))
		 (display-wasnull rs)
		 (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 4 = " result))
		  
		 (when (and (string-null? result) (string=? identificateur "N° ADS"))
		       (set! baratin "Cet objet n'a pas d'orbite calculée !")
		       (set! flagerreur 1))))
		  
		 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : flagerreur 4 = " (number->string flagerreur)))

		 (if (not (java.sql.ResultSet-first rs))
		     (then-block ;; empty result set
		      (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF :  empty result set"))
		      (set! baratin "Cet objet n'a pas d'orbite calculée !")
		      (set! flagerreur 1))
		     (else-block
		      (set! jresult (java.sql.ResultSet-getString2 rs 10))
		      (display-wasnull rs)
		      (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		      (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 10 = " result))
		      (when (and  (string-null? result) (string=? identificateur "N° HIP"))
		       (set! baratin "Cet objet n'a pas d'orbite calculée !")
		       (set! flagerreur 1))))
		 

		 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : flagerreur 10 = " (number->string flagerreur)))
		 
		 (if (not (java.sql.ResultSet-first rs))
		     (then-block ;; empty result set
		      (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF :  empty result set"))
		      (set! baratin "Cet objet n'a pas d'orbite calculée !")
		      (set! flagerreur 1))
		     
		     (else-block
		      (set! jresult (java.sql.ResultSet-getString2 rs 11))
		      (display-wasnull rs)
		      (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		      (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 11 Orb = " result))
		      (when (java.sql.ResultSet-wasNull rs)
			    (set! baratin "Cet objet n'a pas d'orbite calculée !")
			    (set! flagerreur 1))
		      
		      ) ;; du else
		     
		     ) ;; fin (if (not (java.sql.ResultSet-first rs)) 
		  
		  
	    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : flagerreur 11 = " (number->string flagerreur)))

	    (if (equal? flagerreur 1)
		      
		(set! res (string-append
			   res
			    "<div align=\"center\">
                                  <center>
                                           <table width=\"85%\" border=\"3\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">
                                             <tr>
                                                 <th width=\"82%\">
                                                     <font color=\"#0000FF\">"
			                                 baratin "<br>
                                                     </font>
                                                 </th>
                                             </tr>
                                           </table>
                                 </center>
                           </div>
                           <P>
                           <P>"))

		
		(begin  ;; else du if
		  (set! res (string-append
			     res
			     "<div align=\"center\">
                                  <center>
                                          <table width=\"85%\" border=\"3\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">
                                                <tr>
                                                     <th>
                                                          <font color=\"#0000FF\"> Objet <br></font>"
			                                   (field-result-set rs 1)
			                             "</th>"
		                                            "<td align=\"center\"><font color=\"#0000FF\"> N° BD<br></font>"
							    (field-result-set-lowercase rs 3)
							    "</td>"
							    "<td align=\"center\"><font color=\"#0000FF\"> N° ADS<br></font>"
							    (field-result-set-lowercase rs 4)
							    "</td>"
							    "<td align=\"center\"><font color=\"#0000FF\"> N° HIP<br></font>"
							    (field-result-set-lowercase-check-star rs 10)
							    "</td>"
							    "<td align=\"center\"><font color=\"#0000FF\">  Type Spectral<br></font>"
							    (field-result-set-lowercase-check-minus rs 9)
							    "</td>
                                               </tr>
					       <tr>
                                                    <td align=\"center\"><font color=\"#0000FF\"> Alpha 2000<br>"
							    (begin

							      (set! result-double (java.sql.ResultSet-getDouble2 rs 5))
							      ;; (display  "BiglooCode.scm :: ResultatMesuresF : result-double =")
							      ;; (display result-double)
							      ;; (newline)

							      (if (java.sql.ResultSet-wasNull rs)
								  (set! result "&nbsp;")
								  (begin ;; else
								    (set! iresult (floor result-double))
								    (display  "BiglooCode.scm :: ResultatMesuresF : (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL iresult) = ")
								    (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL iresult)


								    ;; (display  "BiglooCode.scm :: ResultatMesuresF : iresult =")
								    ;; (display iresult)
								    ;; (newline)

								    (set! resulth (fix (/ iresult 1000)))

								    (display  "BiglooCode.scm :: ResultatMesuresF : (integer? resulth) 2 =")
								    (display (integer? resulth))
								    (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresF : (bignum? resulth) 2 =")
								    (display (bignum? resulth))
								    (newline)

								    ;; (display  "BiglooCode.scm :: ResultatMesuresF :  (eu.oca.bigloofunct.JavaForBigloo-displayInt resulth) =")
								    ;; (newline)
								    ;; (eu.oca.bigloofunct.JavaForBigloo-displayInt resulth)
								    ;; (newline)
								    
								    ;; (let ((bt1 16)
								    ;; 	  (bt2 0))
								    ;;   (display-expr-nl (bignum? bt1))
								    ;;   (display-msg-var-nl "bt1 =" bt1)
								    ;;   (newline)
								    ;;   (display-expr-nl (bignum? bt2))
								    ;;   (display-msg-var-nl "bt1 =" bt2))

								    (display  "BiglooCode.scm :: ResultatMesuresF : resulth 2 =")
								    (display resulth)
								    (newline)

								    (set! resulth-str #;"result will be here" #;(number->string resulth) (num->string resulth))
								    (set! resultm (- iresult (* resulth 1000)))
								    (set! resultm (fix (/ resultm 10)))

								    (display  "BiglooCode.scm :: ResultatMesuresF : (integer? resultm) =")
								    (display (integer? resultm))
								    (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresF : (bignum? resultm) =")
								    (display (bignum? resultm))
								    (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresF : resultm =")
								    (display resultm)
								    (newline)

								    (set! resultm-str (num->string resultm))
								    (display  "BiglooCode.scm :: ResultatMesuresF : resultm-str =")
								    (display resultm-str)
								    (newline)
								    
								    (set! results (- iresult (* resulth 1000) (* resultm 10)))
								    
								    (display  "BiglooCode.scm :: ResultatMesuresF : (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL results) = ")
								    (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL results)

								    ;; (display  "BiglooCode.scm :: ResultatMesuresF : results =")
								    ;; (display results)
								    ;; (newline)
								    
								    (set! results-str (num->string (fix results)))
								    
								    (display  "BiglooCode.scm :: ResultatMesuresF : results-str =")
								    (display results-str)
								    (newline)

								    (when (< resulth 1)
									  (set! resulth-str "00"))
								    (display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (< resulth 1)")

								    (when (and (>= resulth 1) (< resulth 10))
									  (set! resulth-str (string-append "0" resulth-str)))

								    (display-nl  "BiglooCode.scm :: ResultatMesuresF : passed  (and (>= resulth 1) (< resulth 10)")
								    (when (< resultm 10)
									  (set! resultm-str (string-append "0" resultm-str)))

								    (display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (< resultm 10)")

								    (set! result (string-append resulth-str " h " resultm-str "." results-str " mn"))))
							      (string-append "</font>" result "</td>")) ;; end begin
							   

						      "<td align=\"center\"><font color=\"#0000FF\"> Delta 2000<br>"

						      (begin

							  (set! result-double (java.sql.ResultSet-getDouble2 rs 6))
							  ;; (set! result2 result-double)
							  ;; (display  "BiglooCode.scm :: ResultatMesuresF : result2 =")
							  ;; (newline)
							  ;; (display (real->string result2))
							  ;; (newline)
							  (display  "BiglooCode.scm :: ResultatMesuresF : (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL result-double) = ")
							  (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL result-double)

							  (if (java.sql.ResultSet-wasNull rs)
							      "&nbsp;"
							      (begin ;; else
								(if (< result-double 0)
								    (set! sign "-")
								    (set! sign "&nbsp;"))
								(set! aresult (abs result-double))
								(set! resultd (fix (/ aresult 100)))
								(set! resultd-str (num->string resultd))
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (set! resultd-str (num->string resultd))")
								(set! resultmi (- aresult (* resultd 100)))
								(set! resultmi-str (num->string  (fix resultmi)))
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (set! resultmi-str (num->string (fix  resultmi)))")
								(when (< resultd 1)
								    (set! resultd-str "00"))
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed  (set! resultd-str \"00\")")
								(when (and (>= resultd 1) (< resultd 10))
								      (set! resultd-str (string-append "0" resultd-str)))
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (when (and (>= resultd 1) (< resultd 10)) ......")
								(when (< resultmi 10)
								      (set! resultmi-str (string-append "0" resultmi-str)))
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (when (< resultmi 10) .....")
								(set! result (string-append sign resultd-str " ° " resultmi-str " '"))
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (set! result (string-append sign resultd-str ....")
								(display  "BiglooCode.scm :: ResultatMesuresF : result =")
								(display result)
								(newline)
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed display")
								) ;; end begin else
							      ) ;; end if (java.sql.ResultSet-wasNull rs)
							  (string-append "</font>" result "</td>")) ;; end begin
							
							"<td align=\"center\"><font color=\"#0000FF\"> mag 1<br>"
							
							(begin
							  (set! jresult (java.sql.ResultSet-getString2 rs 7))
							  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
							  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 7 = " result))

							  (when (java.sql.ResultSet-wasNull rs)
								(set! result "&nbsp;"))

							  (when (string=? result "0")
								(set! result "&nbsp;"))

							  (string-append "</font>" result "</td>"))

								"<td align=\"center\"><font color=\"#0000FF\"> mag 2<br>"
							
							(begin
							  (set! jresult (java.sql.ResultSet-getString2 rs 8))
							  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
							  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 8 = " result))

							  (when (java.sql.ResultSet-wasNull rs)
								(set! result "&nbsp;"))

							  (when (string=? result "0")
								(set! result "&nbsp;"))

							  (string-append "</font>" result "</td>"))
							
							
							"<td align=\"center\"><font color=\"#0000FF\"> Orbite calculée ?<br>"
							
							(begin
							  (set! jresult (java.sql.ResultSet-getString2 rs 11))
							  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
							  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 11 = " result))

							  (when (java.sql.ResultSet-wasNull rs)
								(set! result "&nbsp;"))

							  (when (string=? result "*")
								(set! result "NON"))

							  (string-append "</font>" result "</td>"))
							
							
							"</tr>
                                                  </table>
                                               </center>
                                            </div>"
				
							;; vaut mieux pas continuer la (syntaxe lourde)

				   )  ;; close string-append
			   ) ;; close set! res

		     ;; continuer ici
		     (set! res (string-append
			    res
			    "<P>
                             <P>
                                <table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" width=\100%\>
                                  <tr>
                                      <th><font color=\#000080\> Auteur</font></th>
                                      <th><font color=\#000080\> Année</font></th>
                                      <th><font color=\#000080\> Réf.</font></th>
                                      <th><font color=\#000080\> P</font></th>
                                      <th><font color=\#000080\> n</font></th>
                                      <th><font color=\#000080\> T</font></th>
                                      <th><font color=\#000080\> a</font></th>
                                      <th><font color=\#000080\> e</font></th>
                                      <th><font color=\#000080\> i</font></th>
                                      <th><font color=\#000080\> o</font></th>
                                      <th><font color=\#000080\> w</font></th>
                                      <th><font color=\#000080\> 	Notes</font></th>
                                  </tr>"))
		     
		     (java.sql.ResultSet-first rs) ;; rs.movefirst

		     (while (not (java.sql.ResultSet-isAfterLast rs))
			    
			    (set! res (string-append
				       res
				       "<tr>"))
			    
			    (set! jresult (java.sql.ResultSet-getString2 rs 12))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 12 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" (string-upcase result) " &nbsp;</td>"))

			    (set! result (number->string (java.sql.ResultSet-getInt2 rs 13)))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 13 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))

			    (set! jresult (java.sql.ResultSet-getString2 rs 14))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 14 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))

			    (set! jresult (java.sql.ResultSet-getString2 rs 15))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 15 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))
			    
			    (set! jresult (java.sql.ResultSet-getString2 rs 16))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 16 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))

			    (set! jresult (java.sql.ResultSet-getString2 rs 17))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 17 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))

			    (set! jresult (java.sql.ResultSet-getString2 rs 18))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 18 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))

			    (set! jresult (java.sql.ResultSet-getString2 rs 20))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 20 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))

			    (set! jresult (java.sql.ResultSet-getString2 rs 21))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 21 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))
			    
			    (set! jresult (java.sql.ResultSet-getString2 rs 22))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 22 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))

			    (set! jresult (java.sql.ResultSet-getString2 rs 23))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 23 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))

			    (set! jresult (java.sql.ResultSet-getString2 rs 19))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 19 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>
                                                 </tr>"))

			    (java.sql.ResultSet-next rs) ;; rs.Movenext

		     ) ;; end while

		     (set! res (string-append res "</table>"))

		     ) ;; end begin else du if flagerreur 1


		   ) ;; close if flagerreur 1


	    ) ;;  fin cas dans COND : ((string=?  choixres "Orbite")

	   ((string=?  choixres "Ref")

	    (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (cond : Ref")

	    (set! sqlrefere (string-append sqlrefere-begin monchoix sqlrefere-end monordreref))

	    (display-nl  "BiglooCode.scm :: ResultatMesuresF :: (eu.oca.DataBase-executeQueryStatic (java.lang.String-java.lang.String8 sqlrefere))")
	    (eu.oca.DataBase-executeQueryStatic (java.lang.String-java.lang.String8 sqlrefere))

	    (set! res (string-append res "<h1 align=\"center\"><font color=\"#0000FF\"> SIDONIe - Références</font></h1>"))

	    (display "BiglooCode.scm :: ResultatMesuresF : = (java.sql.ResultSet-wasNull rs):")
	    (display (java.sql.ResultSet-wasNull rs))
	    (newline)

	    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : flagerreur = " (number->string flagerreur)))

	    (if (not (java.sql.ResultSet-first rs))
		(begin ;; empty result set
		   (set! baratin "Il n'existe pas de références pour cet objet !")
		   (set! flagerreur 1))
		(begin
		  (set! jresult (java.sql.ResultSet-getString2 rs 1))
		  (display-wasnull rs)
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 1 = " result))

		  (when (and (string-null? result) (string=? identificateur "Nom"))
			(set! baratin "Il n'existe pas de références pour cet objet !")
			(set! flagerreur 1))

		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : flagerreur 1 = " (number->string flagerreur)))

		  (set! jresult (java.sql.ResultSet-getString2 rs 3))
		  (display-wasnull rs)
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 3 = " result))
		  
		  (when (and (string-null? result) (string=? identificateur "N° BD"))
			(set! baratin "Il n'existe pas de références pour cet objet !")
			(set! flagerreur 1))

		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : flagerreur 3 = " (number->string flagerreur)))


		  (set! jresult (java.sql.ResultSet-getString2 rs 4))
		  (display-wasnull rs)
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 4 = " result))
		  
		  (when (and (string-null? result) (string=? identificateur "N° ADS"))
			(set! baratin "Il n'existe pas de références pour cet objet !")
			(set! flagerreur 1))

		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : flagerreur 4 = " (number->string flagerreur)))


		  (set! jresult (java.sql.ResultSet-getString2 rs 10))
		  (display-wasnull rs)
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 10 = " result))

		  (when (and  (string-null? result) (string=? identificateur "N° HIP"))
			(set! baratin "Il n'existe pas de références pour cet objet !")
			(set! flagerreur 1))

		  
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : flagerreur 10 = " (number->string flagerreur)))


		  ) ;; fin begin du else
		
		) ;; fin (if (not (java.sql.ResultSet-first rs)) 
		  

	    (if (equal? flagerreur 1)
		 
		(set! res (string-append
			   res
			    "<div align=\"center\">
                                  <center>
                                           <table width=\"85%\" border=\"3\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">
                                             <tr>
                                                 <th width=\"82%\">
                                                     <font color=\"#0000FF\">"
			                                 baratin "<br>
                                                     </font>
                                                 </th>
                                             </tr>
                                           </table>
                                 </center>
                           </div>
                           <P>
                           <P>"))

		
		(begin  ;; else du if
		     (set! res (string-append
			    res
			    "<div align=\"center\">
                                  <center>
                                          <table width=\"85%\" border=\"3\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">
                                                <tr>
                                                     <th>
                                                          <font color=\"#0000FF\"> Objet <br></font>"
			                                   (field-result-set rs 1)
			                             "</th>"
		                                            "<td align=\"center\"><font color=\"#0000FF\"> N° BD<br></font>"
							    (field-result-set-lowercase rs 3)
							    "</td>"
							    "<td align=\"center\"><font color=\"#0000FF\"> N° ADS<br></font>"
							    (field-result-set-lowercase rs 4)
							    "</td>"
							    "<td align=\"center\"><font color=\"#0000FF\"> N° HIP<br></font>"
							    (field-result-set-lowercase-check-star rs 10)
							    "</td>"
							    "<td align=\"center\"><font color=\"#0000FF\">  Type Spectral<br></font>"
							    (field-result-set-lowercase-check-minus rs 9)
							    "</td>
                                               </tr>
					       <tr>
                                                    <td align=\"center\"><font color=\"#0000FF\"> Alpha 2000<br>"
							    (begin

							      (set! result-double (java.sql.ResultSet-getDouble2 rs 5))
							      ;; (display  "BiglooCode.scm :: ResultatMesuresF : result-double =")
							      ;; (display result-double)
							      ;; (newline)

							      (if (java.sql.ResultSet-wasNull rs)
								  (set! result "&nbsp;")
								  (begin ;; else
								    (set! iresult (floor result-double))
								    (display  "BiglooCode.scm :: ResultatMesuresF : (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL iresult) = ")
								    (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL iresult)


								    ;; (display  "BiglooCode.scm :: ResultatMesuresF : iresult =")
								    ;; (display iresult)
								    ;; (newline)

								    (set! resulth (fix (/ iresult 1000)))

								    (display  "BiglooCode.scm :: ResultatMesuresF : coucou (integer? resulth) =")
								    (display (integer? resulth))
								    (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresF : (bignum? resulth) =")
								    (display (bignum? resulth))
								    (newline)

								    ;; (display  "BiglooCode.scm :: ResultatMesuresF :  (eu.oca.bigloofunct.JavaForBigloo-displayInt resulth) =")
								    ;; (newline)
								    ;; (eu.oca.bigloofunct.JavaForBigloo-displayInt resulth)
								    ;; (newline)

								    (display-nl  "BiglooCode.scm :: ResultatMesuresF : INTRO")

								    (display  "BiglooCode.scm :: ResultatMesuresF : resulth 3 =")
								    (display resulth)
								    (newline)

								    (display "BiglooCode.scm :: ResultatMesuresF : before code change")
								    (newline)

								    (set! resulth-str #;"result will be here" #;(number->string resulth) (num->string resulth))

								    (display-nl  "BiglooCode.scm :: ResultatMesuresF : after code change")
								    
								    (set! resultm (- iresult (* resulth 1000)))
								    (set! resultm (fix (/ resultm 10)))

								    (display  "BiglooCode.scm :: ResultatMesuresF : (integer? resultm) =")
								    (display (integer? resultm))
								    (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresF : (bignum? resultm) =")
								    (display (bignum? resultm))
								    (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresF : resultm =")
								    (display resultm)
								    (newline)

								    (set! resultm-str (num->string resultm))
								    (display  "BiglooCode.scm :: ResultatMesuresF : resultm-str =")
								    (display resultm-str)
								    (newline)
								    
								    (set! results (- iresult (* resulth 1000) (* resultm 10)))
								    
								    (display  "BiglooCode.scm :: ResultatMesuresF : (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL results) = ")
								    (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL results)

								    ;; (display  "BiglooCode.scm :: ResultatMesuresF : results =")
								    ;; (display results)
								    ;; (newline)
								    
								    (set! results-str (num->string (fix results)))
								    
								    (display  "BiglooCode.scm :: ResultatMesuresF : results-str =")
								    (display results-str)
								    (newline)

								    (when (< resulth 1)
									  (set! resulth-str "00"))
								    (display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (< resulth 1)")

								    (when (and (>= resulth 1) (< resulth 10))
									  (set! resulth-str (string-append "0" resulth-str)))

								    (display-nl  "BiglooCode.scm :: ResultatMesuresF : passed  (and (>= resulth 1) (< resulth 10)")
								    (when (< resultm 10)
									  (set! resultm-str (string-append "0" resultm-str)))

								    (display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (< resultm 10)")

								    (set! result (string-append resulth-str " h " resultm-str "." results-str " mn"))))
							      (string-append "</font>" result "</td>")) ;; end begin
							   

						      "<td align=\"center\"><font color=\"#0000FF\"> Delta 2000<br>"

						        (begin

							  (set! result-double (java.sql.ResultSet-getDouble2 rs 6))
							  ;; (set! result2 result-double)
							  ;; (display  "BiglooCode.scm :: ResultatMesuresF : result2 =")
							  ;; (newline)
							  ;; (display (real->string result2))
							  ;; (newline)
							  (display  "BiglooCode.scm :: ResultatMesuresF : (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL result-double) = ")
							  (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL result-double)

							  (if (java.sql.ResultSet-wasNull rs)
							      "&nbsp;"
							      (begin ;; else
								(if (< result-double 0)
								    (set! sign "-")
								    (set! sign "&nbsp;"))
								(set! aresult (abs result-double))
								(set! resultd (fix (/ aresult 100)))
								(set! resultd-str (num->string resultd))
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (set! resultd-str (num->string resultd))")
								(set! resultmi (- aresult (* resultd 100)))
								(set! resultmi-str (num->string  (fix resultmi)))
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (set! resultmi-str (num->string (fix  resultmi)))")
								(when (< resultd 1)
								    (set! resultd-str "00"))
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed  (set! resultd-str \"00\")")
								(when (and (>= resultd 1) (< resultd 10))
								      (set! resultd-str (string-append "0" resultd-str)))
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (when (and (>= resultd 1) (< resultd 10)) ......")
								(when (< resultmi 10)
								      (set! resultmi-str (string-append "0" resultmi-str)))
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (when (< resultmi 10) .....")
								(set! result (string-append sign resultd-str " ° " resultmi-str " '"))
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed (set! result (string-append sign resultd-str ....")
								(display  "BiglooCode.scm :: ResultatMesuresF : result =")
								(display result)
								(newline)
								(display-nl  "BiglooCode.scm :: ResultatMesuresF : passed display")
								) ;; end begin else
							      ) ;; end if (java.sql.ResultSet-wasNull rs)
							  (string-append "</font>" result "</td>")) ;; end begin
							
							"<td align=\"center\"><font color=\"#0000FF\"> mag 1<br>"
							
							(begin
							  (set! jresult (java.sql.ResultSet-getString2 rs 7))
							  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
							  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 7 = " result))

							  (when (java.sql.ResultSet-wasNull rs)
								(set! result "&nbsp;"))

							  (when (string=? result "0")
								(set! result "&nbsp;"))

							  (string-append "</font>" result "</td>"))

								"<td align=\"center\"><font color=\"#0000FF\"> mag 2<br>"
							
							(begin
							  (set! jresult (java.sql.ResultSet-getString2 rs 8))
							  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
							  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 8 = " result))

							  (when (java.sql.ResultSet-wasNull rs)
								(set! result "&nbsp;"))

							  (when (string=? result "0")
								(set! result "&nbsp;"))

							  (string-append "</font>" result "</td>"))
							
							
							"<td align=\"center\"><font color=\"#0000FF\"> Orbite calculée ?<br>"
							
							(begin
							  (set! jresult (java.sql.ResultSet-getString2 rs 11))
							  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
							  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 11 = " result))

							  (when (java.sql.ResultSet-wasNull rs)
								(set! result "&nbsp;"))

							  (when (string=? result "*")
								(set! result "NON"))

							  (string-append "</font>" result "</td>"))
							
							
							"</tr>
                                                  </table>
                                               </center>
                                            </div>"
				
							;; vaut mieux pas continuer la (syntaxe lourde)

				   )  ;; close string-append
			   ) ;; close set! res

		     ;; continuer ici
		     (set! res (string-append
			    res
			    "<P>
                             <P>
                                <table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" width=\100%\>
                                  <tr>
                                      <th><font color=\#000080\> Réf. </font></th>
                                      <th><font color=\#000080\> Revue </font></th>
                                      <th><font color=\#000080\> Titre </font></th>
                                  </tr>"))
		     
		     (java.sql.ResultSet-first rs) ;; rs.movefirst

		     (while (not (java.sql.ResultSet-isAfterLast rs))
			    
			    (set! res (string-append
				       res
				       "<tr>"))
			    
			    (set! jresult (java.sql.ResultSet-getString2 rs 12))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 12 Réf = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" (string-upcase result) " &nbsp;</td>"))

			    ;;(set! result (number->string (java.sql.ResultSet-getInt2 rs 13)))
			    (set! jresult (java.sql.ResultSet-getString2 rs 13))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result Revue = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))

			    (set! jresult (java.sql.ResultSet-getString2 rs 14))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresF : result 14 Titre = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>" 
                                           "</tr>"))
			    
			    (java.sql.ResultSet-next rs) ;; rs.Movenext

		     ) ;; end while

		     (set! res (string-append res "</table>"))
		     
		     ) ;; end begin else du if flagerreur 1

		   ) ;; end if flagerreur 1
		  
	    ) ;;  fin cas dans COND : ((string=?  choixres "Ref")


	   (else ;; du COND 
	    (display-var-nl "BiglooCode.scm :: ResultatMesuresF :: UNSUPPORTED CASE with choixres =" choixres))) ;; fin COND

	  ;; en ASP la connection a la BDD est fermée ici

	  ) ;; end begin
	  
	) ;; end if (or (= flagerreur 1) (= flaguni 1) (= flagexiste 1))

    ;; closing connection to database
    (if dyna
	(eu.oca.DataBase-closeDynamic db)
	(begin
	  (eu.oca.DataBase-closeStatic)
	  #;(eu.oca.DataBase-deregisterDriverStatic)))

    (set! res (string-append res 
			     "
                       <table border=\"0\" width=\"95%\">
                                 <tr>
                                       <td valign=\"top\">" 
                                            ;;"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
                                           "<a href=\"../SidonieDonneesF.html\"><img src=\"../retour_blanc.gif\" border=\"0\" width=\"26\" height=\"26\"></a> 
                                          <font size=\"2\">
                                              <em>Recherche sur un objet</em>
                                          </font>
                                     </td>
                                     <td valign=\"top\">
                                          <a href=\"../ParametresF.html\">
                                              <img src=\"../retour_blanc.gif\" border=\"0\" width=\"26\" height=\"26\"></a> 
                                          <font size=\"2\">
                                               <em>Recherche statistique</em>
                                          </font>
                                     </td>"
                          ;; "</h5>" ;; /h5 was here but no h5 upside !!!
                                     "</td>
                                </tr>
                            </table>"))

    ;; (set! res (string-append res  "<br>"
    ;; 			          "<h1> "
    ;; 			                 "identificateur = " bstr_identificateur 
    ;; 			                 " , T1 = " bstr_objet 
    ;; 			                 " , choixres = " bstr_choixres
    ;; 			                 " , baraterreur = " baraterreur 
    ;; 					 " , flagerreur = " (number->string flagerreur) 
    ;; 					 " , flaguni = " (number->string flaguni) 
    ;; 					 " , flagexiste = " (number->string flagexiste)
    ;; 					 " , flagobjet = " (number->string flagobjet) 
    ;;                               "</h1>"))

    (set! res (string-append res "</body></html>"))


    (display-var-nl "BiglooCode.scm :: ResultatMesuresF :: res = " res) 
  
    (set! len (string-length res))

    (let  (
	   (bstr (make-byte* len))
	   )
      ;;(set! bstr res)
      (set! bstr ($string->bstring res))
      bstr)

    
    )


  )
 






(define (ResultatMesuresFbeta bstr_identificateur bstr_objet)
  
  (display-var-nl "BiglooCode.scm :: ResultatMesuresFbeta :: bstr_identificateur = " bstr_identificateur)
  (display-var-nl "BiglooCode.scm :: ResultatMesuresFbeta :: bstr_objet = " bstr_objet)
    
  (define len_bstr_identificateur (byte*-length bstr_identificateur))
  (display-var-nl "BiglooCode.scm :: ResultatMesuresFbeta :: len_identificateur = " len_bstr_identificateur)
  (display-var-nl "BiglooCode.scm :: ResultatMesuresFbeta :: (string? bstr_identificateur) = " (string? bstr_identificateur))

  (define identificateur (make-string len_bstr_identificateur))
  ;;(define objet "")

  (set! identificateur  bstr_identificateur)
  ;;(set! identificateur  (string-append bstr_identificateur))

  ;;(display-var-nl "BiglooCode.scm :: ResultatMesuresFbeta :: (string-append \"\" bstr_identificateur) = "  (string-append "" bstr_identificateur))
  ;;(set! objet bstr_objet)

  (display-var-nl "BiglooCode.scm :: ResultatMesuresFbeta :: identificateur = " identificateur)
  (display-var-nl "BiglooCode.scm :: ResultatMesuresFbeta :: (string? identificateur) = " (string? identificateur))
  
  (display (string-append "TEST "  identificateur))
  (newline)
  
  (define essai (string-append "TEST "  identificateur))
  (display essai)
  (newline)
    
  (define essai2 "")
  (set!  essai2 (string-append "TEST "  identificateur))
  (display essai2)
  (newline)
  
  (display-var-nl "BiglooCode.scm :: ResultatMesuresFbeta :: essai = " essai)
  (display-var-nl "BiglooCode.scm :: ResultatMesuresFbeta :: essai2 = " essai2)
  (display-var-nl "BiglooCode.scm :: ResultatMesuresFbeta :: identificateur = " identificateur)
  (display-var-nl "BiglooCode.scm :: ResultatMesuresFbeta :: (string? essai) = " (string? essai))
  (display-var-nl "BiglooCode.scm :: ResultatMesuresFbeta :: (string? essai2) = " (string? essai2))
  
  (define baraterreur  "Veuillez re-initialiser la page et recommencer la requète : ") ;; baratin erreur
  
  (define flagerreur 0) ;; flag erreur

  (display-var-nl "BiglooCode.scm :: ResultatMesuresFbeta :: (string=? identificateur \"\") = "  (string=? identificateur ""))
  
  (when (string=? identificateur "") ;;(when (equal? identificateur "")
  	(set! flagerreur 1)
  	(set! baraterreur (string-append baraterreur " Vous devez choisir un identificateur ! "))
  	(display-msg-symb-nl "BiglooCode.scm :: ResultatMesuresFbeta ::" flagerreur))

  ;; (if  (string=? identificateur "");;(string=? identificateur "") ;;(when (equal? identificateur "")
  ;;     (begin
  ;; 	(set! flagerreur 1)
  ;; 	(set! baraterreur (string-append baraterreur " Vous devez choisir un identificateur ! "))
  ;; 	(display-msg-symb-nl "BiglooCode.scm :: ResultatMesuresFbeta ::" flagerreur))
  ;;     '())
  
  (display-msg-symb-nl "BiglooCode.scm :: ResultatMesuresFbeta ::" flagerreur)

  ;;(define char-set "ISO-8859-1") 
  (define char-set "UTF-8") ;; HTML 5 char set
  
  
  (display-var-nl "BiglooCode.scm :: ResultatMesuresFbeta :: identificateur = " identificateur)
  (define res (string-append "<html> "  "<head>" "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=" char-set "\">" "<title>" "Sidonie HTML Response" "</title>" "</head>" "<body>" "<h1> " "identificateur = " bstr_identificateur " , T1 = " bstr_objet " , baraterreur = " baraterreur ", flagerreur = " (number->string flagerreur) "</h1>" "</body></html>"))
  
  ;;(display-var-nl "BiglooCode.scm :: ResultatMesuresFbeta :: res = " res) 
  
  (define len (string-length res))
  (define bstr  (make-byte* len))
  (set! bstr res)
  bstr
    
  )


(define (ResultatMesuresAF bstr_identificateur bstr_objet bstr_choixres)
  
  (let* (
	 (len_bstr_identificateur (byte*-length bstr_identificateur))
	 (identificateur (make-string len_bstr_identificateur))
	 (len_bstr_objet (byte*-length bstr_objet))
	 (objet (make-string len_bstr_objet))
	 (len_bstr_choixres (byte*-length bstr_choixres))
	 (choixres (make-string len_bstr_choixres))
	 (essai "")
	 (baraterreur "Please reload the page and resume : " ) ;; baratin erreur
	 (baratexiste "Please reload the page and resume : the request object exist but with the following name :") ;; baratin existe
	 (baratobjet " Requested object exist but there are also objects with the same identifier (see list) !")
	 (baratuni "Please reload the page and resume : several objects correspond to your request, choose one in the list ")
	 (flagerreur 0) ;; flag erreur
	 (flaguni 0)  ;; flag unique
	 (flagexiste 0) ;; flag existe
	 (char-set "UTF-8")  ;; "ISO-8859-1") ;; HTML 5 char set 
	 (len 0)
	 (dyna #f)
	 (db (if dyna
		 (eu.oca.DataBase-new)
		 '())) ;; database
	 (monchoix "")
	 (flagnom 0)
	 (flaguni 0)
	 (flagobjet 0)
	 (requeteuni::java.lang.String  (begin
					  (set! objet bstr_objet)
					  (eu.oca.bigloofunct.JavaForBigloo-bstring->jstring (string-append "SELECT DISTINCTROW Coordonnées.Nom FROM Coordonnées WHERE Coordonnées.Nom Like '" objet " %'"))))
	 (requetexiste "")
	 ;;(requetexiste::java.lang.String (java.lang.String-java.lang.String8 (string-append "SELECT DISTINCTROW Coordonnées.Nom FROM Coordonnées WHERE Coordonnées.Nom Like '" objet "'")))
	 ;;(jstr::%jstring (eu.oca.bigloofunct.JavaForBigloo-bstring->jstring "hello boy"))
	 (jstr::java.lang.String (eu.oca.bigloofunct.JavaForBigloo-bstring->jstring "hello boy")) 
	 (nombreobjets 0)
	 (objetexiste 0)
	 (rsuni::java.sql.ResultSet eu.oca.DataBase-resultSet2)
	 (rsexiste::java.sql.ResultSet eu.oca.DataBase-resultSet)
	 ;;(rs::java.sql.ResultSet eu.oca.DataBase-resultSetRequete)
	 (rs::java.sql.ResultSet eu.oca.DataBase-resultSet)
	 
	 (marequete
	  (sql-server->mysql-server-syntax 
	   (string-append
	    "SELECT DISTINCTROW Coordonnées.Nom, Coordonnées.[N° Fiche], Coordonnées.[N° BD], Coordonnées.[N° ADS]"
	    ", Coordonnées.[Alpha 2000], Coordonnées.[Delta 2000], Coordonnées.mag1, Coordonnées.mag2, Coordonnées.Spectre" 
	    ", Coordonnées.[N° HIP], Coordonnées.[Orb]"
	    ", Mesures.Date, Mesures.Angle, Mesures.Sépar, Mesures.[Nb Nuits], Mesures.CodeObs,"
	    " Mesures.dimension, Mesures.Instrument, Mesures.Réf, Mesures.Nota"
	    " FROM Coordonnées INNER JOIN Mesures ON Coordonnées.[N° Fiche] = Mesures.[N° Fiche] WHERE")))
	 (monordremes " ORDER BY Mesures.Date")
	 
	 (sqlorbite
	   (sql-server->mysql-server-syntax 
	   (string-append
	    "SELECT DISTINCTROW Coordonnées.Nom, Coordonnées.[N° Fiche], Coordonnées.[N° BD], Coordonnées.[N° ADS]"
	    ", Coordonnées.[Alpha 2000], Coordonnées.[Delta 2000], Coordonnées.mag1, Coordonnées.mag2, Coordonnées.Spectre"
	    ", Coordonnées.[N° HIP], Coordonnées.[Orb]"
	    ", orbite.Auteur, orbite.Année, orbite.référence, orbite.Période, orbite.[moyen mt], orbite.périastre"
	    ", orbite.[mi gd axe], orbite.notes, orbite.excentric, orbite.inclin, orbite.noeud, orbite.[noeud/péri]"
	    " FROM Coordonnées INNER JOIN orbite ON Coordonnées.[N° Fiche] = orbite.[N° Fiche] WHERE")))
	 (monordreorb " ORDER BY orbite.Année")
	 

	 ;; this SQL is endless on MySQL server:
	 ;; SELECT DISTINCTROW Coordonnées.Nom, Coordonnées.`N° Fiche`, Coordonnées.`N° BD`, Coordonnées.`N° ADS`, Coordonnées.`Alpha 2000`, Coordonnées.`Delta 2000`, Coordonnées.mag1, Coordonnées.mag2, Coordonnées.Spectre, Coordonnées.`N° HIP`, Coordonnées.`Orb`, Mesures.Réf, Références.Revue, Références.Titre FROM Coordonnées INNER JOIN (Mesures INNER JOIN Références ON Mesures.Réf = Références.refer) ON Coordonnées.`N° Fiche` = Mesures.`N° Fiche` GROUP BY Coordonnées.Nom, Coordonnées.`N° Fiche`, Coordonnées.`N° BD`, Coordonnées.`N° ADS`, Coordonnées.`Alpha 2000`, Coordonnées.`Delta 2000`, Coordonnées.mag1, Coordonnées.mag2, Coordonnées.Spectre, Coordonnées.`N° HIP`, Coordonnées.`Orb`, Mesures.Réf, Références.Revue, Références.Titre HAVING Coordonnées.Nom Like 'COU 1027' ORDER BY Références.Revue;
	 ;;
	 ;; must be replaced by:
	 ;;
	 ;; SELECT DISTINCTROW tmp.Nom,tmp.`N° Fiche`,tmp.`N° BD`, tmp.`N° ADS`, tmp.`Alpha 2000`, tmp.`Delta 2000`,tmp.mag1,tmp.mag2,tmp.Spectre,tmp.`N° HIP`,tmp.`Orb`,  tmp.Réf,Références.Titre FROM (SELECT DISTINCTROW Coordonnées.Nom, Mesures.Réf FROM Coordonnées INNER JOIN Mesures ON Coordonnées.`N° Fiche` = Mesures.`N° Fiche` WHERE Coordonnées.Nom Like 'a 426') tmp INNER JOIN Références ON tmp.Réf = Références.refer;
	 ;;
	 ;; SELECT DISTINCTROW tmp.Nom,tmp.`N° Fiche`, tmp.`N° BD`, tmp.`N° ADS`, tmp.`Alpha 2000`, tmp.`Delta 2000`,tmp.mag1,tmp.mag2,tmp.Spectre,tmp.`N° HIP`,tmp.`Orb`, tmp.Réf,Références.Revue,Références.Titre FROM (SELECT DISTINCTROW Coordonnées.Nom,Coordonnées.`N° Fiche`,Coordonnées.`N° BD`, Coordonnées.`N° ADS`, Coordonnées.`Alpha 2000`, Coordonnées.`Delta 2000`, Coordonnées.mag1, Coordonnées.mag2, Coordonnées.Spectre, Coordonnées.`N° HIP`, Coordonnées.`Orb`, Mesures.Réf FROM Coordonnées INNER JOIN Mesures ON Coordonnées.`N° Fiche` = Mesures.`N° Fiche` WHERE Coordonnées.Nom Like 'a 426') tmp INNER JOIN Références ON tmp.Réf = Références.refer;
	 ;;
	 ;;  SELECT DISTINCTROW tmp.Nom,tmp.Réf,Références.Titre FROM (SELECT DISTINCTROW Coordonnées.Nom, Mesures.Réf FROM Coordonnées INNER JOIN Mesures ON Coordonnées.`N° Fiche` = Mesures.`N° Fiche` WHERE Coordonnées.Nom Like 'a 426') tmp INNER JOIN Références ON tmp.Réf = Références.refer;
	 ;; (sqlrefere
	 ;;   (sql-server->mysql-server-syntax 
	 ;;   (string-append
	 ;;     "SELECT DISTINCTROW Coordonnées.Nom, Coordonnées.[N° Fiche], Coordonnées.[N° BD], Coordonnées.[N° ADS]"
	 ;;     ", Coordonnées.[Alpha 2000], Coordonnées.[Delta 2000], Coordonnées.mag1, Coordonnées.mag2, Coordonnées.Spectre"
	 ;;     ", Coordonnées.[N° HIP], Coordonnées.[Orb]"
	 ;;     ", Mesures.Réf, Références.Revue"
	 ;;     ", Références.Titre"
	 ;;     " FROM Coordonnées INNER JOIN (Mesures INNER JOIN Références ON"
	 ;;     " Mesures.Réf = Références.refer) ON Coordonnées.[N° Fiche] = Mesures.[N° Fiche]"
	 ;;     " GROUP BY Coordonnées.Nom, Coordonnées.[N° Fiche], Coordonnées.[N° BD], Coordonnées.[N° ADS]"
	 ;;     ", Coordonnées.[Alpha 2000], Coordonnées.[Delta 2000], Coordonnées.mag1, Coordonnées.mag2, Coordonnées.Spectre"
	 ;;     ", Coordonnées.[N° HIP], Coordonnées.[Orb]"
	 ;;     ", Mesures.Réf, Références.Revue"
	 ;;     ", Références.Titre HAVING")))

	 ;; (sqlrefere
	 ;;  "SELECT DISTINCTROW tmp.Nom,tmp.`N° Fiche`, tmp.`N° BD`, tmp.`N° ADS`, tmp.`Alpha 2000`, tmp.`Delta 2000`,tmp.mag1,tmp.mag2,tmp.Spectre,tmp.`N° HIP`,tmp.`Orb`, tmp.Réf,Références.Revue,Références.Titre FROM (SELECT DISTINCTROW Coordonnées.Nom,Coordonnées.`N° Fiche`,Coordonnées.`N° BD`, Coordonnées.`N° ADS`, Coordonnées.`Alpha 2000`, Coordonnées.`Delta 2000`, Coordonnées.mag1, Coordonnées.mag2, Coordonnées.Spectre, Coordonnées.`N° HIP`, Coordonnées.`Orb`, Mesures.Réf FROM Coordonnées INNER JOIN Mesures ON Coordonnées.`N° Fiche` = Mesures.`N° Fiche` WHERE Coordonnées.Nom Like 'a 426') tmp INNER JOIN Références ON tmp.Réf = Références.refer")

	 (sqlrefere "") ;; will be construct later

	 (sqlrefere-begin
	  "SELECT DISTINCTROW tmp.Nom,tmp.`N° Fiche`, tmp.`N° BD`, tmp.`N° ADS`, tmp.`Alpha 2000`, tmp.`Delta 2000`,tmp.mag1,tmp.mag2,tmp.Spectre,tmp.`N° HIP`,tmp.`Orb`, tmp.Réf,Références.Revue,Références.Titre FROM (SELECT DISTINCTROW Coordonnées.Nom,Coordonnées.`N° Fiche`,Coordonnées.`N° BD`, Coordonnées.`N° ADS`, Coordonnées.`Alpha 2000`, Coordonnées.`Delta 2000`, Coordonnées.mag1, Coordonnées.mag2, Coordonnées.Spectre, Coordonnées.`N° HIP`, Coordonnées.`Orb`, Mesures.Réf FROM Coordonnées INNER JOIN Mesures ON Coordonnées.`N° Fiche` = Mesures.`N° Fiche` WHERE")

	 (sqlrefere-end 
	   " GROUP BY Mesures.Réf) tmp INNER JOIN Références ON tmp.Réf = Références.refer GROUP BY tmp.Nom, tmp.`N° Fiche`, tmp.`N° BD`, tmp.`N° ADS`, tmp.`Alpha 2000`, tmp.`Delta 2000`, tmp.mag1, tmp.mag2, tmp.Spectre, tmp.`N° HIP`, tmp.`Orb`, Références.Revue, Références.Titre ")

	 (monordreref " ORDER BY Références.Revue")

	 (jresult::java.lang.String (java.lang.String-java.lang.String8 ""))
	 (result "")
	 (baratin "")
	 ;;(result-double #;::float 0.0)
	 (result-double '())
	 (result-double::double  0.0)
	 (result2::real 0.0)
	 (bs-result "")
	 (len-bs-result 0)
	 (str-result "")
	 (rd '())
	 (iresult 0)
	 (resulth 0) ;; hours
	 (resulth-str "") ;; hours string
	 (resultm 0) ;; minutes
	 (resultm-str "") ;; minutes string
	 (results 0) ;; seconds
	 (results-str "") ;; seconds string
	 (sign "") ;; signe
	 (aresult 0.0) ;; absolute value
	 (resultd 0)
	 (resultd-str "")
	 (resultmi 0)
	 (resultmi-str "")
	 )

    ;;(display-msg-symb-nl  "BiglooCode.scm :: ResultatMesuresAF ::" nombreobjets ) ;; je sais pas pourquoi cette macro fais planter bigloo ici mais pas dans d'autres situations
    (display-var-nl "BiglooCode.scm :: ResultatMesuresAF ::  nombreobjets = "  nombreobjets )
    ;;(eu.oca.bigloofunct.JavaForBigloo-bstringTojstring '()) ;;"hello boy")
    (display-var-nl "BiglooCode.scm :: ResultatMesuresAF :: bstr_identificateur = " bstr_identificateur)
    (display-var-nl "BiglooCode.scm :: ResultatMesuresAF :: bstr_objet = " bstr_objet)
    
    (display-var-nl "BiglooCode.scm :: ResultatMesuresAF :: len_identificateur = " len_bstr_identificateur)
    (display-var-nl "BiglooCode.scm :: ResultatMesuresAF :: (string? bstr_identificateur) = " (string? bstr_identificateur))
    ;;(eu.oca.bigloofunct.JavaForBigloo-bstring->jstring "hello boy")
   
    (set! res (string-append
	       "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">
               <html>
                     <head>
                            <meta http-equiv=\"Content-Type\" content=\"text/html; charset=" char-set "\">
                            <meta name=\"GENERATOR\" content=\"Microsoft FrontPage 5.0\">
                            <title>SIDONIe-Résultats : identifications et mesures</title>
                     </head>
                     <LINK rel=\"stylesheet\" href=\"../Style.css\" type=\"text/css\">
               <body>"))


    ;;(set! identificateur  ($bstring->string bstr_identificateur))
    (set! identificateur bstr_identificateur)
    ;;(set! identificateur  (string-append bstr_identificateur))

    ;;(display-var-nl "BiglooCode.scm :: ResultatMesuresAF :: (string-append \"\" bstr_identificateur) = "  (string-append "" bstr_identificateur))
    
    ;;(set! objet ($bstring->string bstr_objet))
    ;;(set! choixres ($bstring->string bstr_choixres)) 

    (set! choixres bstr_choixres) 

    (display-var-nl "BiglooCode.scm :: ResultatMesuresAF :: identificateur = " identificateur)
    (display-var-nl "BiglooCode.scm :: ResultatMesuresAF :: (string? identificateur) = " (string? identificateur))
  
    (display (string-append "TEST "  identificateur))
    (newline)

    (set!  essai (string-append "TEST "  identificateur))
    (display essai)
    (newline)

    (display-var-nl "BiglooCode.scm :: ResultatMesuresAF :: essai = " essai)
    (display-var-nl "BiglooCode.scm :: ResultatMesuresAF :: identificateur = " identificateur)
    (display-var-nl "BiglooCode.scm :: ResultatMesuresAF :: (string? essai) = " (string? essai))
    
    (display-var-nl "BiglooCode.scm :: ResultatMesuresAF :: (string=?  identificateur \"\" ) = "  (string=?  identificateur ""))


     ;; database driver search
    
    (newline)

    (if dyna 
	(begin
	  (eu.oca.DataBase-searchDriverDynamic db)

	  (eu.oca.DataBase-connectDynamic db)

	  ;;(eu.oca.DataBase-connectDynamic db) ;; testing fool proof overconnections

	  (eu.oca.DataBase-createStatementDynamic db) ;; i put the statement it if it's true it can be reused for multiple SQL queries

	  )
	(begin 
	  (eu.oca.DataBase-searchDriverStatic)

	  (eu.oca.DataBase-connectStatic)

	  ;;(eu.oca.DataBase-connectStatic) ;; testing fool proof overconnections

	  (eu.oca.DataBase-createStatementStatic) ;; i put the statement here if it's true it can be reused for multiple SQL queries
	  ))

    (newline)

    (when (string-null? identificateur) ;;(string=? identificateur "") ;;(when (equal? identificateur "")
	  (set! flagerreur 1)
	  (set! baraterreur (string-append baraterreur " You need to give an identifier ! " )))
	
    (when (string-null? objet)
	  (set! flagerreur 1)
	  (set! baraterreur (string-append baraterreur " You need to give an object's name ! " )))

    (when (string-null? choixres)
	  (set! flagerreur 1)
	  (set! baraterreur (string-append baraterreur " You need to tick one type of information box ! " )))

   
    (cond
     ((string=? identificateur "Nom")
	 (set! monchoix (string-append " Coordonnées.Nom Like '" objet "'"))
	 (when (= flagerreur 0)
	       (set! flagnom 1)
	       (set! requetexiste (string-append "SELECT DISTINCTROW Coordonnées.Nom FROM Coordonnées WHERE Coordonnées.Nom Like '" objet "'"))
	       (set! jstr (eu.oca.bigloofunct.JavaForBigloo-bstring->jstring requetexiste))
	       
	       (if dyna
		   (begin
		     (eu.oca.DataBase-executeQueryDynamic db jstr)
		     (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (eu.oca.DataBase-getval db)")
		     (eu.oca.DataBase-getval db)
		     (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: passed")
		     (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (eu.oca.DataBase-getresultSet db)")
		     (eu.oca.DataBase-getresultSet db)
		     (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: passed")
		     ;; (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (%jresultset-next (eu.oca.DataBase-getresultSet db))")
		     ;; (%jresultset-next (eu.oca.DataBase-getresultSet db))
		     (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (java.sql.ResultSet-next (eu.oca.DataBase-getresultSet db))")
		     (java.sql.ResultSet-next (eu.oca.DataBase-getresultSet db))

		     (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: passed")
		     (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (eu.oca.DataBase-val db)")
		     (eu.oca.DataBase-val db)
		     (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: passed")
		     (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (eu.oca.DataBase-resultSet db)")
		     (eu.oca.DataBase-resultSet db)
		     (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: passed")
		     ;; (%jresultset-next (eu.oca.DataBase-resultSet db))
		     ;; (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: before let")
		     ;; (let ((reset (eu.oca.DataBase-resultSet db)))
		     ;;   ;;(%jresultset-next reset)
		     ;;   (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (%jresultset-last reset)")
		     ;;   (%jresultset-last reset)
		     ;;   (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (set! nombreobjets (%jresultset-getRow reset))")
		     ;;   (set! nombreobjets (%jresultset-getRow reset))
		     ;;   (display-msg-symb-nl  "BiglooCode.scm :: ResultatMesuresAF ::" nombreobjets )
		     ;;   )
		     ;;(%jresultset-next (eu.oca.DataBase-resultSet db))
		     )
		   (begin
		     (eu.oca.DataBase-executeQueryStatic jstr) ;; equiv requetexiste
		     (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (java.sql.ResultSet-next eu.oca.DataBase-resultSet)")
		     (java.sql.ResultSet-next eu.oca.DataBase-resultSet)
		     (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (java.sql.ResultSet-last eu.oca.DataBase-resultSet)")

		     ;; this is for counting
		     (java.sql.ResultSet-last eu.oca.DataBase-resultSet)
		     (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (set! objetexiste (java.sql.ResultSet-getRow eu.oca.DataBase-resultSet))")
		     (set! objetexiste (java.sql.ResultSet-getRow eu.oca.DataBase-resultSet))
		     ;;(display-msg-symb-nl  "BiglooCode.scm :: ResultatMesuresAF ::" objetexiste ) ;; je sais pas pourquoi cette macro fais planter bigloo ici mais pas dans d'autres situations (symbol->string plante avec le front end java)
		     (display-var-nl "BiglooCode.scm :: ResultatMesuresAF ::  objetexiste = "  objetexiste )
		     ;;(display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (%jresultset-next eu.oca.DataBase-resultSet)")
		     ;;(%jresultset-next eu.oca.DataBase-resultSet)
		     
		     ;; (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: testing (symbol->string 'blabla) :")
		     ;; (symbol->string 'blabla)
		     ;; (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: test done")

		     (java.sql.ResultSet-beforeFirst eu.oca.DataBase-resultSet)
		     ;; (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (set! nombreobjets (java.sql.ResultSet-beforeFirst eu.oca.DataBase-resultSet))")

		     (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: passed")
		     )
		   ) ;; end if dyna
	       
	       ;;(display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (eu.oca.DataBase-executeQueryStatic requeteuni)")
	       ;;(eu.oca.DataBase-executeQueryStatic requeteuni)
	       (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (eu.oca.DataBase-executeQueryStatic2args requeteuni2)")
	       (eu.oca.DataBase-executeQueryStatic2args requeteuni 2)
	       ;;(display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (java.sql.ResultSet-last eu.oca.DataBase-resultSet)")
	       ;;(java.sql.ResultSet-last eu.oca.DataBase-resultSet)
	       (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (java.sql.ResultSet-last rsuni)")
	       (java.sql.ResultSet-last rsuni)
	       ;; (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (set! nombreobjets (java.sql.ResultSet-getRow eu.oca.DataBase-resultSet))")
	       ;; (set! nombreobjets (java.sql.ResultSet-getRow eu.oca.DataBase-resultSet))
	       (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (set! nombreobjets (java.sql.ResultSet-getRow rsuni))")
	       (set! nombreobjets (java.sql.ResultSet-getRow rsuni))
	       (display-var-nl "BiglooCode.scm :: ResultatMesuresAF ::  nombreobjets = "  nombreobjets )
			     
	       ;;(java.sql.ResultSet-beforeFirst eu.oca.DataBase-resultSet)
	       (java.sql.ResultSet-beforeFirst rsuni)
	       (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: passed-2")
	       
	       (when (> nombreobjets 1)
		     (set! flaguni 1))

	       (when (and (= objetexiste 0) (= nombreobjets 1))
		     (set! flagexiste 1))

	       (when (and (= objetexiste 1) (>= nombreobjets 1))
		     (set! flagobjet 1))))

     ((string=? identificateur "N° ADS")
      (set! monchoix (sql-server->mysql-server-syntax (string-append " Coordonnées.[N° ADS] Like '" objet "'"))))
     
     ((string=? identificateur "N° BD")
      (set! monchoix (sql-server->mysql-server-syntax (string-append " Coordonnées.[N° BD] Like '" objet "'"))))

     ((string=? identificateur "N° HIP")
      (set! monchoix (sql-server->mysql-server-syntax (string-append  " Coordonnées.[N° HIP] Like '" objet "'"))))

     (else
      (display-var-nl "BiglooCode.scm :: ResultatMesuresAF :: UNSUPPORTED CASE with identificateur =" identificateur)))

    ;;(display-nl  "BiglooCode.scm :: ResultatMesuresAF :: forcing flagexiste = 1")
    ;;(set! flagexiste 1)

    ;;(display-nl  "BiglooCode.scm :: ResultatMesuresAF :: forcing flaguni = 1")
    ;;(set! flaguni 1)

    (if (or (= flagerreur 1) (= flaguni 1) (= flagexiste 1))
	(begin
	  (when (= flagerreur 1)
		(set! res (string-append
			   res
		     "<h1 align=\"center\">
                          <font color=\"#0000FF\">SIDONIe - Results : Identifications and measurements</font>
                      </h1>
                      <div align=\"center\">
                          <center>
                                  <table width=\"85%\" border=\"3\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">
                                        <tr>
                                             <th width=\"80%\">
                                                 <font color=\"#0000FF\">"
                                                       baraterreur "<br>
                                                 </font>
                                             </th>
                                        </tr>
                                  </table>
                          </center>
                      </div>")))

	  
	  (when (= flagexiste 1)
		(set! res (string-append
			   res
		     "<h1 align=\"center\">
                          <font color=\"#0000FF\">SIDONIe - Results : Identifications and measurements</font>
                      </h1>
                      <div align=\"center\">
                          <center>
                                  <table width=\"85%\" border=\"3\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">
                                        <tr>
                                             <th width=\"80%\">
                                                 <font color=\"#0000FF\">"
                                                       baratexiste "<br>
                                                 </font>
                                             </th>
                                        </tr>
                                  </table>
                          </center>
                      </div>
		      <P>
                      <P>
                      <table border=\"1\" cellpadding=\"0\" align=\"center\" cellspacing=\"0\" width=\"20%\" >
                      <tr>
                          <th><font color=\"#000080\" > Objects </font></th>
                      </tr>"))

		(java.sql.ResultSet-first rsuni)
		
		(display-nl  "BiglooCode.scm :: ResultatMesuresAF :: nom :: (when (= flagexiste 1) |   2   | :: before loop !")
		
		(letrec ((resultat "UN RESULTAT")
			 (loop (lambda ()
				 (if (java.sql.ResultSet-isAfterLast rsuni)
				     '()
				     (let ((jresultat::java.lang.String #;(java.lang.String-java.lang.String8 "a result") (java.sql.ResultSet-getString2 rsuni 0))
					   (bstr_tmp '()))
				       (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: before (set! bstr_tmp (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresultat))")
				       (set! bstr_tmp (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresultat)) 
				       (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: before (set! resultat jresultat)")
				       (set! resultat bstr_tmp) ;; a revoir quand utilise (convertir avec une procedure java en byte char puis scheme string je pense)
				       (display-var-nl   "BiglooCode.scm :: ResultatMesuresAF :: resultat = " resultat)
				       (when (string-null? resultat)
					     (set! resultat "&nbsp;"))
				       (set! res (string-append
						  res
						  "<tr>
                                                       <td>"
						             (string-upcase resultat) " &nbsp;
                                                       </td>
                                                   </tr>"))
				       (java.sql.ResultSet-next rsuni)
				       (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: looping !")
				       (loop))))))
		  (loop))
		  

		;; (let loop ((l '(1 2 3)))
		;;   (if (java.sql.ResultSet-isAfterLast rsuni)
		;;       '()
		;;       (begin
		;; 	(set! res (string-append
		;; 		   res
		;; 		   " A "))
		;; 	(java.sql.ResultSet-next rsuni)
		;; 	(loop))))

		(set! res (string-append
			   res
			   "</table>"))

		) ;; (when (= flagexiste 1)


	  (when (= flaguni 1)
		(proc-barat-english baratuni rsuni))

	  (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: before (when (and (= flagerreur 0) (= flagobjet 0) (= flagnom 1))")
	  (when (and (= flagerreur 0) (= flagobjet 0) (= flagnom 1))
		(set! rsexiste eu.oca.DataBase-resultSet)
		(java.sql.ResultSet-close rsexiste)
	      
		;;(set! rsexiste (class-nil rsexiste))
		;; (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: before (class-nil rsexiste)")
		;; (class-nil rsexiste) ;; au cas marche pas utiliser la fonction java setResultSetNull
		(display-nl  "BiglooCode.scm :: ResultatMesuresAF :: before (eu.oca.DataBase-setResultSetNull)")
		(eu.oca.DataBase-setResultSetNull)

		;; (java.sql.ResultSet-close rsuni)
		;; (class-nil rsuni)
		(display-nl  "BiglooCode.scm :: ResultatMesuresAF :: before (eu.oca.DataBase-setResultSet2Null)")
		(eu.oca.DataBase-setResultSet2Null)
		)
	  
	  ) ;; begin

	;; else du (if (or (= flagerreur 1) (= flaguni 1) (= flagexiste 1))
	
	(begin
	  (when (= flagobjet 1)
	      (proc-barat-english baratobjet rsuni))

	  (when (= flagnom 1)
		(set! rsexiste eu.oca.DataBase-resultSet)
		(java.sql.ResultSet-close rsexiste)

		;;(display-nl  "BiglooCode.scm :: ResultatMesuresAF :: before (set! rsexiste (class-nil rsexiste))")
		;;(set! rsexiste (class-nil rsexiste))
		;;(display-nl  "BiglooCode.scm :: ResultatMesuresAF :: before (class-nil rsexiste)")
		;;(class-nil rsexiste) ;; au cas marche pas utiliser la fonction java setResultSetNull		
		(display-nl  "BiglooCode.scm :: ResultatMesuresAF :: before (eu.oca.DataBase-setResultSetNull)")
		(eu.oca.DataBase-setResultSetNull)

		;; (java.sql.ResultSet-close rsuni)
		;; (class-nil rsuni)

		(display-nl  "BiglooCode.scm :: ResultatMesuresAF :: before (eu.oca.DataBase-setResultSet2Null)")
		(eu.oca.DataBase-setResultSet2Null))


	  (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: choixres =")
	  (display choixres)
	  (newline)

	  ;; un COND assez gros ..... correspond au case du code ASP
	  
	  (cond
	   
	   ((string=?  choixres "Ident")
	    
	    (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (cond : Ident")

	    (set! marequete (string-append marequete monchoix monordremes))

	     ;; (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (eu.oca.DataBase-executeQueryStaticStringString
	     ;;  (java.lang.String-java.lang.String8 marequete)
	     ;;  (java.lang.String-java.lang.String8 \"Requete\")))")
	     ;; (eu.oca.DataBase-executeQueryStaticStringString
	     ;;  (java.lang.String-java.lang.String8 marequete)
	     ;;  (java.lang.String-java.lang.String8 "Requete"))

	     (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (eu.oca.DataBase-executeQueryStatic (java.lang.String-java.lang.String8 marequete))")
	     (eu.oca.DataBase-executeQueryStatic
	      (java.lang.String-java.lang.String8 marequete))
	     
	     (set! res (string-append res "<h1 align=\"center\"><font color=\"#0000FF\"> SIDONIe - Identifications and measurements</font></h1>"))


	     (if (not (java.sql.ResultSet-first rs))
		 (then-block ;; empty result set
		  (set! baratin "this object doesn't exist in the database or is misspelled !" )
		  (set! flagerreur 1))

		 (else-block
		  (java.sql.ResultSet-first rs)

		  (set! jresult (java.sql.ResultSet-getString2 rs 1))
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result = " result))
	     
		  (display "BiglooCode.scm :: ResultatMesuresAF : = (java.sql.ResultSet-wasNull rs) 1 :")
		  (display (java.sql.ResultSet-wasNull rs))
		  (newline)
		  
		  
		  (when (and (string-null? result) (string=? identificateur "Nom"))
			(set! baratin "this object doesn't exist in the database or is misspelled !" )
			(set! flagerreur 1))))



	     (set! bs-result (eu.oca.bigloofunct.JavaForBigloo-jdouble->bstring (eu.oca.bigloofunct.JavaForBigloo-pi2dec)))
	     (display "BiglooCode.scm :: ResultatMesuresAF : bs-result = ")
	     (display bs-result)
	     (newline)

	     (if (not (java.sql.ResultSet-first rs))
		 (then-block ;; empty result set
		  (set! baratin "this object doesn't exist in the database or is misspelled !" )
		  (set! flagerreur 1))

		 (else-block
		  
		  (set! bs-result (eu.oca.bigloofunct.JavaForBigloo-jdouble->bstring (java.sql.ResultSet-getDouble2 rs 3)))
		  (display "BiglooCode.scm :: ResultatMesuresAF : bs-result =")
		  (display bs-result)
		  (display "|")
		  (newline)
		  (display "BiglooCode.scm :: ResultatMesuresAF : = (java.sql.ResultSet-wasNull rs) 3 :")
		  (display (java.sql.ResultSet-wasNull rs))
		  (newline)

		  ;; (set! len-bs-result (byte*-length bs-result))
		  ;; (display-var-nl "BiglooCode.scm :: ResultatMesuresAF : len-bs-result = " len-bs-result)
		  ;; (set! bs-result (make-string len-bs-result))
		  ;; (set! bs-result (eu.oca.bigloofunct.JavaForBigloo-jdouble->bstring (java.sql.ResultSet-getDouble2 rs 3)))
		  ;; (display "BiglooCode.scm :: ResultatMesuresAF : bs-result = ")
		  ;; (display bs-result)
		  ;; (newline)

		  (display-nl "BiglooCode.scm :: ResultatMesuresAF : before  (set! result-double .....)")
		  ;;(set! result-double (java.sql.ResultSet-getDouble2 rs 3))
		  (set! result-double (eu.oca.bigloofunct.JavaForBigloo-pi2dec))
		  ;; (set! result-double (eu.oca.bigloofunct.JavaForBigloo-piFloat))
		  ;; (display-nl "BiglooCode.scm :: ResultatMesuresAF : before  (set! result2 .......)")
		  ;; (set! result2 (+fl result-double 0.0))
		  ;; (display "BiglooCode.scm :: ResultatMesuresAF : result2 = ")
		  ;; (display result2)
		  ;; (newline)
		  ;; (display-nl "BiglooCode.scm :: ResultatMesuresAF : before display")
		  (display "BiglooCode.scm :: ResultatMesuresAF : result-double = ")
		  ;;(display result-double)
		  ;;(printf "~a" result-double)
		  ;;(printf "~s" result-double)
		  (display (double->ieee-string result-double))
		  (newline)
		  ;;(display (real->string result-double))
		  ;;(newline)
		  ;;(display-nl "BiglooCode.scm :: ResultatMesuresAF : before display-var-nl")
		  ;;(display-var-nl "BiglooCode.scm :: ResultatMesuresAF : result-double = " result-double)
		  (display-var-nl "BiglooCode.scm :: ResultatMesuresAF :: (string? bs-result) = " (string? bs-result))
		  
		  ;; (display "BiglooCode.scm :: ResultatMesuresAF : (display (string->real bs-result)) =")
		  ;; (newline)
		  ;; (display (string->number (string-append " " bs-result)))
		  ;; (newline)
		  
		  (set! result-double (string->real bs-result))
	     
		  (set! str-result bs-result)
		  
		  (let* ((sp (string-split str-result "."))
			 (irss (car sp))
			 (frss (cadr sp))
			 (irs (string->number irss))
			 (frs (string->number frss))
			 (len-frss (string-length frss))
			 (expo (expt 10 len-frss))
			 (frc-rs (/ frs expo))
			 (rsf (+ irs frc-rs))
			 )
		    (display-var-nl "BiglooCode.scm :: ResultatMesuresAF : irss = " irss)
		    (display-var-nl "BiglooCode.scm :: ResultatMesuresAF : frss = " frss)
		    (display-var-nl "BiglooCode.scm :: ResultatMesuresAF : irs = " irs)
		    (display-var-nl "BiglooCode.scm :: ResultatMesuresAF : frs = " frs)
		    ;;(display-var-nl "BiglooCode.scm :: ResultatMesuresAF : rsf = " rsf)
		    (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL rsf)
		    )

		  (display  "BiglooCode.scm :: ResultatMesuresAF : (real? result-double) =")
		  (display (real? result-double))
		  (newline)
		  (set! result2 result-double)
		  ;;(set! str-result (real->string result2))
		  ;;(+ result-double 1)
		  ;;(display result2)
		  ;;(real->string result2)
		  
		  (when (and (java.sql.ResultSet-wasNull rs) (string=? identificateur "N° BD"))
			(set! baratin "this object doesn't exist in the database or its BD number is misspelled !")
			(set! flagerreur 1))))



	     (if (not (java.sql.ResultSet-first rs))
		 (then-block ;; empty result set
		  (set! baratin "this object doesn't exist in the database or is misspelled !" )
		  (set! flagerreur 1))

		 (else-block

		  (set! jresult (java.sql.ResultSet-getString2 rs 3))
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 3 = " result))

		  (when (and  (string-null? result)  (string=? identificateur "N° BD"))
			(set! baratin "this object doesn't exist in the database or its BD number is misspelled !")
			(set! flagerreur 1))))


	     
	     (if (not (java.sql.ResultSet-first rs))
		 (then-block ;; empty result set
		  (set! baratin "this object doesn't exist in the database or is misspelled !" )
		  (set! flagerreur 1))

		 (else-block

		  (set! bs-result (eu.oca.bigloofunct.JavaForBigloo-jdouble->bstring (java.sql.ResultSet-getDouble2 rs 4)))
		  (display "BiglooCode.scm :: ResultatMesuresAF : bs-result 4 =")
		  (display bs-result)
		  (display "|")
		  (newline)

		  (display "BiglooCode.scm :: ResultatMesuresAF : = (java.sql.ResultSet-wasNull rs) 4 :")
		  (display (java.sql.ResultSet-wasNull rs))
		  (newline)

		  (when (and (java.sql.ResultSet-wasNull rs) (string=? identificateur "N° ADS"))
			(set! baratin "this object doesn't exist in the database or its ADS number is misspelled !")
			(set! flagerreur 1))))

	     (if (not (java.sql.ResultSet-first rs))
		 (then-block ;; empty result set
		  (set! baratin "this object doesn't exist in the database or is misspelled !" )
		  (set! flagerreur 1))

		 (else-block

		  (set! jresult (java.sql.ResultSet-getString2 rs 4))
	     
		  (when (not (java.sql.ResultSet-wasNull rs))
			(set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			(display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 4 = " result))
			
			(when (and  (string-null? result) (string=? identificateur "N° ADS"))
			      (set! baratin "this object doesn't exist in the database or its ADS number is misspelled !")
			      (set! flagerreur 1)))))




	     ;; (set! bs-result (eu.oca.bigloofunct.JavaForBigloo-jdouble->bstring (java.sql.ResultSet-getDouble2 rs 9)))
	     ;; (display "BiglooCode.scm :: ResultatMesuresAF : bs-result 9 =")
	     ;; (display bs-result)
	     ;; (display "|")
	     ;; (newline)

	     (if (not (java.sql.ResultSet-first rs))
		 (then-block ;; empty result set
		  (set! baratin "this object doesn't exist in the database or is misspelled !" )
		  (set! flagerreur 1))

		 (else-block
		  
		  (set! jresult (java.sql.ResultSet-getString2 rs 10))
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 10 = " result))


		  (display "BiglooCode.scm :: ResultatMesuresAF : = (java.sql.ResultSet-wasNull rs) 10 :")
		  (display (java.sql.ResultSet-wasNull rs))
		  (newline)
		  
		  (when (and (java.sql.ResultSet-wasNull rs) (string=? identificateur "N° HIP"))
			(set! baratin "this object doesn't exist in the database or its HIP number is misspelled !")
			(set! flagerreur 1))

		  (when (and  (string-null? result) (string=? identificateur "N° HIP"))
			(set! baratin "this object doesn't exist in the database or its HIP number is misspelled !")
			(set! flagerreur 1))))

	     
	     (if (equal? flagerreur 1)
		 
		   (set! res (string-append
			      res
			    "<div align=\"center\">
                                  <center>
                                           <table width=\"85%\" border=\"3\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">
                                             <tr>
                                                 <th width=\"82%\">
                                                     <font color=\"#0000FF\">"
			                                 baratin "<br>
                                                     </font>
                                                 </th>
                                             </tr>
                                           </table>
                                 </center>
                           </div>
                           <P>
                           <P>"))

		
		   (begin  ;; else du if
		     (set! res (string-append
			    res
			    "<div align=\"center\">
                                  <center>
                                          <table width=\"85%\" border=\"3\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">
                                                <tr>
                                                     <th>
                                                          <font color=\"#0000FF\"> Object <br></font>"
			                                   (field-result-set rs 1)
			                             "</th>"
		                                            "<td align=\"center\"><font color=\"#0000FF\"> BD #<br></font>"
							    (field-result-set-lowercase rs 3)
							    "</td>"
							    "<td align=\"center\"><font color=\"#0000FF\"> ADS #<br></font>"
							    (field-result-set-lowercase rs 4)
							    "</td>"
							    "<td align=\"center\"><font color=\"#0000FF\"> HIP #<br></font>"
							    (field-result-set-lowercase-check-star rs 10)
							    "</td>"
							    "<td align=\"center\"><font color=\"#0000FF\">  Spectral Type<br></font>"
							    (field-result-set-lowercase-check-minus rs 9)
							    "</td>
                                               </tr>
					       <tr>
                                                    <td align=\"center\"><font color=\"#0000FF\"> Alpha 2000<br>"
							    (begin

							      (set! result-double (java.sql.ResultSet-getDouble2 rs 5))
							      ;; (display  "BiglooCode.scm :: ResultatMesuresAF : result-double =")
							      ;; (display result-double)
							      ;; (newline)

							      (if (java.sql.ResultSet-wasNull rs)
								  (set! result "&nbsp;")
								  (begin ;; else
								    (set! iresult (floor result-double))
								    (display  "BiglooCode.scm :: ResultatMesuresAF : (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL iresult) = ")
								    (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL iresult)


								    ;; (display  "BiglooCode.scm :: ResultatMesuresAF : iresult =")
								    ;; (display iresult)
								    ;; (newline)

								    (set! resulth (fix (/ iresult 1000)))

								    (display  "BiglooCode.scm :: ResultatMesuresAF : (integer? resulth) =")
								    (display (integer? resulth))
								    (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresAF : (bignum? resulth) =")
								    (display (bignum? resulth))
								    (newline)

								    ;; (display  "BiglooCode.scm :: ResultatMesuresAF :  (eu.oca.bigloofunct.JavaForBigloo-displayInt resulth) =")
								    ;; (newline)
								    ;; (eu.oca.bigloofunct.JavaForBigloo-displayInt resulth)
								    ;; (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresAF : resulth 1 =")
								    (display resulth)
								    (newline)

								    (display-nl  "BiglooCode.scm :: ResultatMesuresAF : before change code 1")

								    (set! resulth-str #;"result will be here" #;(number->string resulth) (num->string resulth))

								    (display-nl  "BiglooCode.scm :: ResultatMesuresAF : after change code 1")

								    (set! resultm (- iresult (* resulth 1000)))
								    (set! resultm (fix (/ resultm 10)))

								    (display  "BiglooCode.scm :: ResultatMesuresAF : (integer? resultm) =")
								    (display (integer? resultm))
								    (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresAF : (bignum? resultm) =")
								    (display (bignum? resultm))
								    (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresAF : resultm =")
								    (display resultm)
								    (newline)

								    (set! resultm-str (num->string resultm))
								    (display  "BiglooCode.scm :: ResultatMesuresAF : resultm-str =")
								    (display resultm-str)
								    (newline)
								    
								    (set! results (- iresult (* resulth 1000) (* resultm 10)))
								    
								    (display  "BiglooCode.scm :: ResultatMesuresAF : (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL results) = ")
								    (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL results)

								    ;; (display  "BiglooCode.scm :: ResultatMesuresAF : results =")
								    ;; (display results)
								    ;; (newline)
								    
								    (set! results-str (num->string (fix results)))
								    
								    (display  "BiglooCode.scm :: ResultatMesuresAF : results-str =")
								    (display results-str)
								    (newline)

								    (when (< resulth 1)
									  (set! resulth-str "00"))
								    (display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (< resulth 1)")

								    (when (and (>= resulth 1) (< resulth 10))
									  (set! resulth-str (string-append "0" resulth-str)))

								    (display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed  (and (>= resulth 1) (< resulth 10)")
								    (when (< resultm 10)
									  (set! resultm-str (string-append "0" resultm-str)))

								    (display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (< resultm 10)")

								    (set! result (string-append resulth-str " h " resultm-str "." results-str " mn"))))
							      (string-append "</font>" result "</td>")) ;; end begin
							   

						      "<td align=\"center\"><font color=\"#0000FF\"> Delta 2000<br>"

						        (begin

							  (set! result-double (java.sql.ResultSet-getDouble2 rs 6))
							  ;; (set! result2 result-double)
							  ;; (display  "BiglooCode.scm :: ResultatMesuresAF : result2 =")
							  ;; (newline)
							  ;; (display (real->string result2))
							  ;; (newline)
							  (display  "BiglooCode.scm :: ResultatMesuresAF : (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL result-double) = ")
							  (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL result-double)

							  (if (java.sql.ResultSet-wasNull rs)
							      "&nbsp;"
							      (begin ;; else
								(if (< result-double 0)
								    (set! sign "-")
								    (set! sign "&nbsp;"))
								(set! aresult (abs result-double))
								(set! resultd (fix (/ aresult 100)))
								(set! resultd-str (num->string resultd))
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (set! resultd-str (num->string resultd))")
								(set! resultmi (- aresult (* resultd 100)))
								(set! resultmi-str (num->string  (fix resultmi)))
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (set! resultmi-str (num->string (fix  resultmi)))")
								(when (< resultd 1)
								    (set! resultd-str "00"))
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed  (set! resultd-str \"00\")")
								(when (and (>= resultd 1) (< resultd 10))
								      (set! resultd-str (string-append "0" resultd-str)))
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (when (and (>= resultd 1) (< resultd 10)) ......")
								(when (< resultmi 10)
								      (set! resultmi-str (string-append "0" resultmi-str)))
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (when (< resultmi 10) .....")
								(set! result (string-append sign resultd-str " ° " resultmi-str " '"))
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (set! result (string-append sign resultd-str ....")
								(display  "BiglooCode.scm :: ResultatMesuresAF : result =")
								(display result)
								(newline)
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed display")
								) ;; end begin else
							      ) ;; end if (java.sql.ResultSet-wasNull rs)
							  (string-append "</font>" result "</td>")) ;; end begin

							"<td align=\"center\"><font color=\"#0000FF\"> mag 1<br>"
							
							(begin
							  (set! jresult (java.sql.ResultSet-getString2 rs 7))
							  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
							  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 7 = " result))

							  (when (java.sql.ResultSet-wasNull rs)
								(set! result "&nbsp;"))

							  (when (string=? result "00.")
								(set! result "&nbsp;"))

							  (string-append "</font>" result "</td>"))

							"<td align=\"center\"><font color=\"#0000FF\"> mag 2<br>"
							
							(begin
							  (set! jresult (java.sql.ResultSet-getString2 rs 8))
							  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
							  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 8 = " result))

							  (when (java.sql.ResultSet-wasNull rs)
								(set! result "&nbsp;"))

							  (when (string=? result "00.")
								(set! result "&nbsp;"))

							  (string-append "</font>" result "</td>"))

							"<td align=\"center\"><font color=\"#0000FF\"> Calculated Orbit ?<br>"
							
							(begin
							  (set! jresult (java.sql.ResultSet-getString2 rs 11))
							  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
							  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 11 = " result))

							  (when (java.sql.ResultSet-wasNull rs)
								(set! result "&nbsp;"))
							  
							  (if (string=? result "*")
							      (set! result "NO")
							      (set! result "YES"))

							  (string-append "</font>" result "</td>"))

					        "</tr>
                                         </table>
                                     </center>
                               </div>"
			       ) ;; end de string-append , bizarre emacs le voit pas 
			   ) ;; end (set! res ...


		     (set! res (string-append
			    res
		       "<P>
                        <P>
                        <table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">
                            <tr>
                                <th><font color=\"#000080\"> Date </font></th>
                                <th><font color=\"#000080\"> Angle </font></th>
                                <th><font color=\"#000080\"> Separ. </font></th>
                                <th><font color=\"#000080\"> Nights </font></th>
                                <th><font color=\"#000080\"> Code </font></th>
                                <th><font color=\"#000080\"> Instr. </font></th>
                                <th><font color=\"#000080\"> Dim. </font></th>
                                <th><font color=\"#000080\"> Ref. </font></th>
                                <th><font color=\"#000080\"> Notes </font></th>
                            </tr>"))


		 ;; (let loop ((l '(1 2 3)))
		 ;;   (if (java.sql.ResultSet-isAfterLast rsuni)
		 ;;       '()
		 ;;       (begin
		 ;; 	 (set! res (string-append
		 ;; 		    res
		 ;; 		    " A "))
		 ;; 	 (java.sql.ResultSet-next rsuni)
		 ;; 	 (loop))))
		 
		 (java.sql.ResultSet-first rs) ;; rs.movefirst

		 (let loop ((end-flag (java.sql.ResultSet-isAfterLast rs)))
		   (when (not end-flag) ;; not rs.eof
			 (set! res (string-append res "<tr>"))

			 (set! jresult (java.sql.ResultSet-getString2 rs 12))
			 (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 12 = " result))
			 (when (java.sql.ResultSet-wasNull rs)
			       (set! result "&nbsp;"))
			 (set! res (string-append res "<td>" result " &nbsp;</td>"))

			 (set! jresult (java.sql.ResultSet-getString2 rs 13))
			 (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 13 = " result))
			 (when (java.sql.ResultSet-wasNull rs)
			       (set! result "&nbsp;"))
			 (set! res (string-append res "<td>" result " &nbsp;</td>"))

			 (set! jresult (java.sql.ResultSet-getString2 rs 14))
			 (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 14 = " result))
			 (when (java.sql.ResultSet-wasNull rs)
			       (set! result "&nbsp;"))
			 (set! res (string-append res "<td>" result " &nbsp;</td>"))

			 (set! result (number->string (java.sql.ResultSet-getInt2 rs 15)))
			 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 15 = " result))
			 (when (java.sql.ResultSet-wasNull rs)
			     (set! result "&nbsp;"))
			 (set! res (string-append res "<td>" result " &nbsp;</td>"))

			 (set! jresult (java.sql.ResultSet-getString2 rs 16))
			 (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 16 = " result))
			 (if (java.sql.ResultSet-wasNull rs)
			     (set! result "&nbsp;")
			     (set! result (string-upcase result)))
			 (set! res (string-append res "<td>" result " &nbsp;</td>"))

			 (set! jresult (java.sql.ResultSet-getString2 rs 18))
			 (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 18 = " result))
			 (when (java.sql.ResultSet-wasNull rs)
			       (set! result "&nbsp;"))
			 (when (string=? result "t")
			       (set! result (string-upcase result)))
			 (when (string=? result "l")
			       (set! result (string-upcase result)))
			 (set! res (string-append res "<td>" result " &nbsp;</td>"))

			 (set! jresult (java.sql.ResultSet-getString2 rs 17))
			 (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 17 = " result))
			 (when (java.sql.ResultSet-wasNull rs)
			       (set! result "&nbsp;"))
			 (set! res (string-append res "<td>" result " &nbsp;</td>"))
			 
			 (set! jresult (java.sql.ResultSet-getString2 rs 19))
			 (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 19 = " result))
			 (if (java.sql.ResultSet-wasNull rs)
			     (set! result "&nbsp;")
			     (set! result (string-upcase result)))
			 (set! res (string-append res "<td>" result " &nbsp;</td>"))

			 (set! jresult (java.sql.ResultSet-getString2 rs 20))
			 (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			 (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 20 = " result))
			 (when (or (java.sql.ResultSet-wasNull rs) (string-null? result))
			       (set! result "&nbsp;"))
			 (set! res (string-append res "<td>" result " &nbsp;</td></tr>"))

			 (java.sql.ResultSet-next rs) ;; rs.Movenext
			 (loop (java.sql.ResultSet-isAfterLast rs)))) ;; Loop
		 
		 (set! res (string-append
			    res
			    "</table>"))
		 
		 ) ;; end (begin ... du else du if
		   
	       ) ;; end (if (equal? flagerreur 1) ..... else   begin ...

	     ) ;;  fin cas dans COND : ((string=?  choixres "Ident")

	   ((string=?  choixres "Orbite")

	    (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (cond : Orbite")

	    (set! sqlorbite (string-append sqlorbite monchoix monordreorb))

	    ;; (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (eu.oca.DataBase-executeQueryStaticStringString
	    ;;   (java.lang.String-java.lang.String8 sqlorbite)
	    ;;   (java.lang.String-java.lang.String8 \"Orbite\")))")
	    ;; (eu.oca.DataBase-executeQueryStaticStringString
	    ;;   (java.lang.String-java.lang.String8 sqlorbite)
	    ;;   (java.lang.String-java.lang.String8 "Orbite"))

	    (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (eu.oca.DataBase-executeQueryStatic (java.lang.String-java.lang.String8 sqlorbite))")
	    (eu.oca.DataBase-executeQueryStatic (java.lang.String-java.lang.String8 sqlorbite))

	    (set! res (string-append res "<h1 align=\"center\"><font color=\"#0000FF\"> SIDONIe - Orbit Parameters</font></h1>"))

	    (display "BiglooCode.scm :: ResultatMesuresAF : = (java.sql.ResultSet-wasNull rs):")
	    (display (java.sql.ResultSet-wasNull rs))
	    (newline)

	    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : flagerreur = " (number->string flagerreur)))

	    (if (not (java.sql.ResultSet-first rs))
		(begin ;; empty result set
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF :  empty result set"))
		  (set! baratin "No calculated orbit for this object !" )
		  (set! flagerreur 1))
		(begin
		  (set! jresult (java.sql.ResultSet-getString2 rs 1))
		  (display-wasnull rs)
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 1 = " result))
		  
		  (when (and (string-null? result) (string=? identificateur "Nom"))
			(set! baratin "No calculated orbit for this object !")
			(set! flagerreur 1))
		  
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : flagerreur 1 = " (number->string flagerreur)))
		  
		  (set! jresult (java.sql.ResultSet-getString2 rs 3))
		  (display-wasnull rs)
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 3 = " result))
		  
		  (when (and (string-null? result) (string=? identificateur "N° BD"))
			(set! baratin "No calculated orbit for this object !")
			(set! flagerreur 1))
		  
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : flagerreur 3 = " (number->string flagerreur)))
		  
		  
		  (set! jresult (java.sql.ResultSet-getString2 rs 4))
		  (display-wasnull rs)
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 4 = " result))
		  
		  (when (and (string-null? result) (string=? identificateur "N° ADS"))
			(set! baratin "No calculated orbit for this object !" )
			(set! flagerreur 1))
		  
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : flagerreur 4 = " (number->string flagerreur)))

		  
		  (set! jresult (java.sql.ResultSet-getString2 rs 10))
		  (display-wasnull rs)
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 10 = " result))
		  
		  (when (and  (string-null? result) (string=? identificateur "N° HIP"))
			(set! baratin "No calculated orbit for this object !")
			(set! flagerreur 1))
		  
		  
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : flagerreur 10 = " (number->string flagerreur)))
		  
		  
		  (set! jresult (java.sql.ResultSet-getString2 rs 11))
		  (display-wasnull rs)
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 11 Orb = " result))
		  (when (java.sql.ResultSet-wasNull rs)
			(set! baratin "Cet objet n'a pas d'orbite calculée !")
			(set! flagerreur 1))

		  ) ;; fin begin du else
		
		) ;; fin (if (not (java.sql.ResultSet-first rs)) 
		  
		  
	    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : flagerreur 11 = " (number->string flagerreur)))

	    (if (equal? flagerreur 1)
		      
		(set! res (string-append
			   res
			    "<div align=\"center\">
                                  <center>
                                           <table width=\"85%\" border=\"3\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">
                                             <tr>
                                                 <th width=\"82%\">
                                                     <font color=\"#0000FF\">"
			                                 baratin "<br>
                                                     </font>
                                                 </th>
                                             </tr>
                                           </table>
                                 </center>
                           </div>
                           <P>
                           <P>"))

		
		(begin  ;; else du if
		  (set! res (string-append
			     res
			     "<div align=\"center\">
                                  <center>
                                          <table width=\"85%\" border=\"3\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">
                                                <tr>
                                                     <th>
                                                          <font color=\"#0000FF\"> Object <br></font>"
			                                   (field-result-set rs 1)
			                             "</th>"
		                                            "<td align=\"center\"><font color=\"#0000FF\"> BD #<br></font>"
							    (field-result-set-lowercase rs 3)
							    "</td>"
							    "<td align=\"center\"><font color=\"#0000FF\"> ADS #<br></font>"
							    (field-result-set-lowercase rs 4)
							    "</td>"
							    "<td align=\"center\"><font color=\"#0000FF\"> HIP #<br></font>"
							    (field-result-set-lowercase-check-star rs 10)
							    "</td>"
							    "<td align=\"center\"><font color=\"#0000FF\"> Spectral Type<br></font>"
							    (field-result-set-lowercase-check-minus rs 9)
							    "</td>
                                               </tr>
					       <tr>
                                                    <td align=\"center\"><font color=\"#0000FF\"> Alpha 2000<br>"
							    (begin

							      (set! result-double (java.sql.ResultSet-getDouble2 rs 5))
							      ;; (display  "BiglooCode.scm :: ResultatMesuresAF : result-double =")
							      ;; (display result-double)
							      ;; (newline)

							      (if (java.sql.ResultSet-wasNull rs)
								  (set! result "&nbsp;")
								  (begin ;; else
								    (set! iresult (floor result-double))
								    (display  "BiglooCode.scm :: ResultatMesuresAF : (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL iresult) = ")
								    (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL iresult)


								    ;; (display  "BiglooCode.scm :: ResultatMesuresAF : iresult =")
								    ;; (display iresult)
								    ;; (newline)

								    (set! resulth (fix (/ iresult 1000)))

								    (display  "BiglooCode.scm :: ResultatMesuresAF : (integer? resulth) 2 =")
								    (display (integer? resulth))
								    (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresAF : (bignum? resulth) 2 =")
								    (display (bignum? resulth))
								    (newline)

								    ;; (display  "BiglooCode.scm :: ResultatMesuresAF :  (eu.oca.bigloofunct.JavaForBigloo-displayInt resulth) =")
								    ;; (newline)
								    ;; (eu.oca.bigloofunct.JavaForBigloo-displayInt resulth)
								    ;; (newline)
								    
								    ;; (let ((bt1 16)
								    ;; 	  (bt2 0))
								    ;;   (display-expr-nl (bignum? bt1))
								    ;;   (display-msg-var-nl "bt1 =" bt1)
								    ;;   (newline)
								    ;;   (display-expr-nl (bignum? bt2))
								    ;;   (display-msg-var-nl "bt1 =" bt2))

								    (display  "BiglooCode.scm :: ResultatMesuresAF : resulth 2 =")
								    (display resulth)
								    (newline)

								    (set! resulth-str #;"result will be here" #;(number->string resulth) (num->string resulth))
								    (set! resultm (- iresult (* resulth 1000)))
								    (set! resultm (fix (/ resultm 10)))

								    (display  "BiglooCode.scm :: ResultatMesuresAF : (integer? resultm) =")
								    (display (integer? resultm))
								    (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresAF : (bignum? resultm) =")
								    (display (bignum? resultm))
								    (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresAF : resultm =")
								    (display resultm)
								    (newline)

								    (set! resultm-str (num->string resultm))
								    (display  "BiglooCode.scm :: ResultatMesuresAF : resultm-str =")
								    (display resultm-str)
								    (newline)
								    
								    (set! results (- iresult (* resulth 1000) (* resultm 10)))
								    
								    (display  "BiglooCode.scm :: ResultatMesuresAF : (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL results) = ")
								    (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL results)

								    ;; (display  "BiglooCode.scm :: ResultatMesuresAF : results =")
								    ;; (display results)
								    ;; (newline)
								    
								    (set! results-str (num->string (fix results)))
								    
								    (display  "BiglooCode.scm :: ResultatMesuresAF : results-str =")
								    (display results-str)
								    (newline)

								    (when (< resulth 1)
									  (set! resulth-str "00"))
								    (display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (< resulth 1)")

								    (when (and (>= resulth 1) (< resulth 10))
									  (set! resulth-str (string-append "0" resulth-str)))

								    (display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed  (and (>= resulth 1) (< resulth 10)")
								    (when (< resultm 10)
									  (set! resultm-str (string-append "0" resultm-str)))

								    (display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (< resultm 10)")

								    (set! result (string-append resulth-str " h " resultm-str "." results-str " mn"))))
							      (string-append "</font>" result "</td>")) ;; end begin
							   

						      "<td align=\"center\"><font color=\"#0000FF\"> Delta 2000<br>"

						      (begin

							  (set! result-double (java.sql.ResultSet-getDouble2 rs 6))
							  ;; (set! result2 result-double)
							  ;; (display  "BiglooCode.scm :: ResultatMesuresAF : result2 =")
							  ;; (newline)
							  ;; (display (real->string result2))
							  ;; (newline)
							  (display  "BiglooCode.scm :: ResultatMesuresAF : (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL result-double) = ")
							  (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL result-double)

							  (if (java.sql.ResultSet-wasNull rs)
							      "&nbsp;"
							      (begin ;; else
								(if (< result-double 0)
								    (set! sign "-")
								    (set! sign "&nbsp;"))
								(set! aresult (abs result-double))
								(set! resultd (fix (/ aresult 100)))
								(set! resultd-str (num->string resultd))
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (set! resultd-str (num->string resultd))")
								(set! resultmi (- aresult (* resultd 100)))
								(set! resultmi-str (num->string  (fix resultmi)))
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (set! resultmi-str (num->string (fix  resultmi)))")
								(when (< resultd 1)
								    (set! resultd-str "00"))
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed  (set! resultd-str \"00\")")
								(when (and (>= resultd 1) (< resultd 10))
								      (set! resultd-str (string-append "0" resultd-str)))
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (when (and (>= resultd 1) (< resultd 10)) ......")
								(when (< resultmi 10)
								      (set! resultmi-str (string-append "0" resultmi-str)))
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (when (< resultmi 10) .....")
								(set! result (string-append sign resultd-str " ° " resultmi-str " '"))
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (set! result (string-append sign resultd-str ....")
								(display  "BiglooCode.scm :: ResultatMesuresAF : result =")
								(display result)
								(newline)
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed display")
								) ;; end begin else
							      ) ;; end if (java.sql.ResultSet-wasNull rs)
							  (string-append "</font>" result "</td>")) ;; end begin
							
							"<td align=\"center\"><font color=\"#0000FF\"> mag 1<br>"
							
							(begin
							  (set! jresult (java.sql.ResultSet-getString2 rs 7))
							  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
							  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 7 = " result))

							  (when (java.sql.ResultSet-wasNull rs)
								(set! result "&nbsp;"))

							  (when (string=? result "0")
								(set! result "&nbsp;"))

							  (string-append "</font>" result "</td>"))

								"<td align=\"center\"><font color=\"#0000FF\"> mag 2<br>"
							
							(begin
							  (set! jresult (java.sql.ResultSet-getString2 rs 8))
							  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
							  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 8 = " result))

							  (when (java.sql.ResultSet-wasNull rs)
								(set! result "&nbsp;"))

							  (when (string=? result "0")
								(set! result "&nbsp;"))

							  (string-append "</font>" result "</td>"))
							
							
							"<td align=\"center\"><font color=\"#0000FF\">Calculated Orbit ?<br>"
							
							(begin
							  (set! jresult (java.sql.ResultSet-getString2 rs 11))
							  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
							  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 11 = " result))

							  (when (java.sql.ResultSet-wasNull rs)
								(set! result "&nbsp;"))

							  (if (string=? result "*")
							      (set! result "NON")
							      (set! result "YES"))

							  (string-append "</font>" result "</td>"))
							
							
							"</tr>
                                                  </table>
                                               </center>
                                            </div>"
				
							;; vaut mieux pas continuer la (syntaxe lourde)

				   )  ;; close string-append
			   ) ;; close set! res

		     ;; continuer ici
		     (set! res (string-append
			    res
			    "<P>
                             <P>
                                <table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" width=\100%\>
                                  <tr>
                                      <th><font color=\#000080\> Author</font></th>
                                      <th><font color=\#000080\> Year</font></th>
                                      <th><font color=\#000080\> Ref.</font></th>
                                      <th><font color=\#000080\> P</font></th>
                                      <th><font color=\#000080\> n</font></th>
                                      <th><font color=\#000080\> T</font></th>
                                      <th><font color=\#000080\> a</font></th>
                                      <th><font color=\#000080\> e</font></th>
                                      <th><font color=\#000080\> i</font></th>
                                      <th><font color=\#000080\> o</font></th>
                                      <th><font color=\#000080\> w</font></th>
                                      <th><font color=\#000080\> 	Notes</font></th>
                                  </tr>"))
		     
		     (java.sql.ResultSet-first rs) ;; rs.movefirst

		     (while (not (java.sql.ResultSet-isAfterLast rs))
			    
			    (set! res (string-append
				       res
				       "<tr>"))
			    
			    (set! jresult (java.sql.ResultSet-getString2 rs 12))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 12 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" (string-upcase result) " &nbsp;</td>"))

			    (set! result (number->string (java.sql.ResultSet-getInt2 rs 13)))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 13 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))

			    (set! jresult (java.sql.ResultSet-getString2 rs 14))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 14 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))

			    (set! jresult (java.sql.ResultSet-getString2 rs 15))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 15 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))
			    
			    (set! jresult (java.sql.ResultSet-getString2 rs 16))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 16 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))

			    (set! jresult (java.sql.ResultSet-getString2 rs 17))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 17 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))

			    (set! jresult (java.sql.ResultSet-getString2 rs 18))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 18 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))

			    (set! jresult (java.sql.ResultSet-getString2 rs 20))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 20 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))

			    (set! jresult (java.sql.ResultSet-getString2 rs 21))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 21 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))
			    
			    (set! jresult (java.sql.ResultSet-getString2 rs 22))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 22 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))

			    (set! jresult (java.sql.ResultSet-getString2 rs 23))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 23 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))

			    (set! jresult (java.sql.ResultSet-getString2 rs 19))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 19 orbit = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>
                                                 </tr>"))

			    (java.sql.ResultSet-next rs) ;; rs.Movenext

		     ) ;; end while

		     (set! res (string-append res "</table>"))

		     ) ;; end begin else du if flagerreur 1


		   ) ;; close if flagerreur 1


	    ) ;;  fin cas dans COND : ((string=?  choixres "Orbite")

	   ((string=?  choixres "Ref")

	    (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (cond : Ref")

	    (set! sqlrefere (string-append sqlrefere-begin monchoix sqlrefere-end monordreref))

	    (display-nl  "BiglooCode.scm :: ResultatMesuresAF :: (eu.oca.DataBase-executeQueryStatic (java.lang.String-java.lang.String8 sqlrefere))")
	    (eu.oca.DataBase-executeQueryStatic (java.lang.String-java.lang.String8 sqlrefere))

	    (set! res (string-append res "<h1 align=\"center\"><font color=\"#0000FF\"> SIDONIe - References</font></h1>"))

	    (display "BiglooCode.scm :: ResultatMesuresAF : = (java.sql.ResultSet-wasNull rs):")
	    (display (java.sql.ResultSet-wasNull rs))
	    (newline)

	    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : flagerreur = " (number->string flagerreur)))

	    (if (not (java.sql.ResultSet-first rs))
		(begin ;; empty result set
		   (set! baratin "No references for this object !")
		   (set! flagerreur 1))
		(begin
		  (set! jresult (java.sql.ResultSet-getString2 rs 1))
		  (display-wasnull rs)
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 1 = " result))

		  (when (and (string-null? result) (string=? identificateur "Nom"))
			(set! baratin "No references for this object !")
			(set! flagerreur 1))

		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : flagerreur 1 = " (number->string flagerreur)))

		  (set! jresult (java.sql.ResultSet-getString2 rs 3))
		  (display-wasnull rs)
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 3 = " result))
		  
		  (when (and (string-null? result) (string=? identificateur "N° BD"))
			(set! baratin "No references for this object !")
			(set! flagerreur 1))

		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : flagerreur 3 = " (number->string flagerreur)))


		  (set! jresult (java.sql.ResultSet-getString2 rs 4))
		  (display-wasnull rs)
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 4 = " result))
		  
		  (when (and (string-null? result) (string=? identificateur "N° ADS"))
			(set! baratin  "No references for this object !")
			(set! flagerreur 1))

		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : flagerreur 4 = " (number->string flagerreur)))


		  (set! jresult (java.sql.ResultSet-getString2 rs 10))
		  (display-wasnull rs)
		  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 10 = " result))

		  (when (and  (string-null? result) (string=? identificateur "N° HIP"))
			(set! baratin "No references for this object !")
			(set! flagerreur 1))

		  
		  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : flagerreur 10 = " (number->string flagerreur)))


		  ) ;; fin begin du else
		
		) ;; fin (if (not (java.sql.ResultSet-first rs)) 
		  

	    (if (equal? flagerreur 1)
		 
		(set! res (string-append
			   res
			    "<div align=\"center\">
                                  <center>
                                           <table width=\"85%\" border=\"3\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">
                                             <tr>
                                                 <th width=\"82%\">
                                                     <font color=\"#0000FF\">"
			                                 baratin "<br>
                                                     </font>
                                                 </th>
                                             </tr>
                                           </table>
                                 </center>
                           </div>
                           <P>
                           <P>"))

		
		(begin  ;; else du if
		     (set! res (string-append
			    res
			    "<div align=\"center\">
                                  <center>
                                          <table width=\"85%\" border=\"3\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">
                                                <tr>
                                                     <th>
                                                          <font color=\"#0000FF\"> Object <br></font>"
			                                   (field-result-set rs 1)
			                             "</th>"
		                                            "<td align=\"center\"><font color=\"#0000FF\"> BD #<br></font>"
							    (field-result-set-lowercase rs 3)
							    "</td>"
							    "<td align=\"center\"><font color=\"#0000FF\"> ADS #<br></font>"
							    (field-result-set-lowercase rs 4)
							    "</td>"
							    "<td align=\"center\"><font color=\"#0000FF\"> HIP #<br></font>"
							    (field-result-set-lowercase-check-star rs 10)
							    "</td>"
							    "<td align=\"center\"><font color=\"#0000FF\"> Spectral Type<br></font>"
							    (field-result-set-lowercase-check-minus rs 9)
							    "</td>
                                               </tr>
					       <tr>
                                                    <td align=\"center\"><font color=\"#0000FF\"> Alpha 2000<br>"
							    (begin

							      (set! result-double (java.sql.ResultSet-getDouble2 rs 5))
							      ;; (display  "BiglooCode.scm :: ResultatMesuresAF : result-double =")
							      ;; (display result-double)
							      ;; (newline)

							      (if (java.sql.ResultSet-wasNull rs)
								  (set! result "&nbsp;")
								  (begin ;; else
								    (set! iresult (floor result-double))
								    (display  "BiglooCode.scm :: ResultatMesuresAF : (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL iresult) = ")
								    (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL iresult)


								    ;; (display  "BiglooCode.scm :: ResultatMesuresAF : iresult =")
								    ;; (display iresult)
								    ;; (newline)

								    (set! resulth (fix (/ iresult 1000)))

								    (display  "BiglooCode.scm :: ResultatMesuresAF : coucou (integer? resulth) =")
								    (display (integer? resulth))
								    (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresAF : (bignum? resulth) =")
								    (display (bignum? resulth))
								    (newline)

								    ;; (display  "BiglooCode.scm :: ResultatMesuresAF :  (eu.oca.bigloofunct.JavaForBigloo-displayInt resulth) =")
								    ;; (newline)
								    ;; (eu.oca.bigloofunct.JavaForBigloo-displayInt resulth)
								    ;; (newline)

								    (display-nl  "BiglooCode.scm :: ResultatMesuresAF : INTRO")

								    (display  "BiglooCode.scm :: ResultatMesuresAF : resulth 3 =")
								    (display resulth)
								    (newline)

								    (display "BiglooCode.scm :: ResultatMesuresAF : before code change")
								    (newline)

								    (set! resulth-str #;"result will be here" #;(number->string resulth) (num->string resulth))

								    (display-nl  "BiglooCode.scm :: ResultatMesuresAF : after code change")
								    
								    (set! resultm (- iresult (* resulth 1000)))
								    (set! resultm (fix (/ resultm 10)))

								    (display  "BiglooCode.scm :: ResultatMesuresAF : (integer? resultm) =")
								    (display (integer? resultm))
								    (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresAF : (bignum? resultm) =")
								    (display (bignum? resultm))
								    (newline)

								    (display  "BiglooCode.scm :: ResultatMesuresAF : resultm =")
								    (display resultm)
								    (newline)

								    (set! resultm-str (num->string resultm))
								    (display  "BiglooCode.scm :: ResultatMesuresAF : resultm-str =")
								    (display resultm-str)
								    (newline)
								    
								    (set! results (- iresult (* resulth 1000) (* resultm 10)))
								    
								    (display  "BiglooCode.scm :: ResultatMesuresAF : (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL results) = ")
								    (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL results)

								    ;; (display  "BiglooCode.scm :: ResultatMesuresAF : results =")
								    ;; (display results)
								    ;; (newline)
								    
								    (set! results-str (num->string (fix results)))
								    
								    (display  "BiglooCode.scm :: ResultatMesuresAF : results-str =")
								    (display results-str)
								    (newline)

								    (when (< resulth 1)
									  (set! resulth-str "00"))
								    (display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (< resulth 1)")

								    (when (and (>= resulth 1) (< resulth 10))
									  (set! resulth-str (string-append "0" resulth-str)))

								    (display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed  (and (>= resulth 1) (< resulth 10)")
								    (when (< resultm 10)
									  (set! resultm-str (string-append "0" resultm-str)))

								    (display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (< resultm 10)")

								    (set! result (string-append resulth-str " h " resultm-str "." results-str " mn"))))
							      (string-append "</font>" result "</td>")) ;; end begin
							   

						      "<td align=\"center\"><font color=\"#0000FF\"> Delta 2000<br>"

						        (begin

							  (set! result-double (java.sql.ResultSet-getDouble2 rs 6))
							  ;; (set! result2 result-double)
							  ;; (display  "BiglooCode.scm :: ResultatMesuresAF : result2 =")
							  ;; (newline)
							  ;; (display (real->string result2))
							  ;; (newline)
							  (display  "BiglooCode.scm :: ResultatMesuresAF : (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL result-double) = ")
							  (eu.oca.bigloofunct.JavaForBigloo-displayDoubleNL result-double)

							  (if (java.sql.ResultSet-wasNull rs)
							      "&nbsp;"
							      (begin ;; else
								(if (< result-double 0)
								    (set! sign "-")
								    (set! sign "&nbsp;"))
								(set! aresult (abs result-double))
								(set! resultd (fix (/ aresult 100)))
								(set! resultd-str (num->string resultd))
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (set! resultd-str (num->string resultd))")
								(set! resultmi (- aresult (* resultd 100)))
								(set! resultmi-str (num->string  (fix resultmi)))
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (set! resultmi-str (num->string (fix  resultmi)))")
								(when (< resultd 1)
								    (set! resultd-str "00"))
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed  (set! resultd-str \"00\")")
								(when (and (>= resultd 1) (< resultd 10))
								      (set! resultd-str (string-append "0" resultd-str)))
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (when (and (>= resultd 1) (< resultd 10)) ......")
								(when (< resultmi 10)
								      (set! resultmi-str (string-append "0" resultmi-str)))
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (when (< resultmi 10) .....")
								(set! result (string-append sign resultd-str " ° " resultmi-str " '"))
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed (set! result (string-append sign resultd-str ....")
								(display  "BiglooCode.scm :: ResultatMesuresAF : result =")
								(display result)
								(newline)
								(display-nl  "BiglooCode.scm :: ResultatMesuresAF : passed display")
								) ;; end begin else
							      ) ;; end if (java.sql.ResultSet-wasNull rs)
							  (string-append "</font>" result "</td>")) ;; end begin
							
							"<td align=\"center\"><font color=\"#0000FF\"> mag 1<br>"
							
							(begin
							  (set! jresult (java.sql.ResultSet-getString2 rs 7))
							  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
							  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 7 = " result))

							  (when (java.sql.ResultSet-wasNull rs)
								(set! result "&nbsp;"))

							  (when (string=? result "0")
								(set! result "&nbsp;"))

							  (string-append "</font>" result "</td>"))

								"<td align=\"center\"><font color=\"#0000FF\"> mag 2<br>"
							
							(begin
							  (set! jresult (java.sql.ResultSet-getString2 rs 8))
							  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
							  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 8 = " result))

							  (when (java.sql.ResultSet-wasNull rs)
								(set! result "&nbsp;"))

							  (when (string=? result "0")
								(set! result "&nbsp;"))

							  (string-append "</font>" result "</td>"))
							
							
							"<td align=\"center\"><font color=\"#0000FF\"> Calculated Orbit ?<br>"
							
							(begin
							  (set! jresult (java.sql.ResultSet-getString2 rs 11))
							  (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
							  (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 11 = " result))

							  (when (java.sql.ResultSet-wasNull rs)
								(set! result "&nbsp;"))

							  (if (string=? result "*")
							      (set! result "NON")
							      (set! result "YES"))

							  (string-append "</font>" result "</td>"))
							
							
							"</tr>
                                                  </table>
                                               </center>
                                            </div>"
				
							;; vaut mieux pas continuer la (syntaxe lourde)

				   )  ;; close string-append
			   ) ;; close set! res

		     ;; continuer ici
		     (set! res (string-append
			    res
			    "<P>
                             <P>
                                <table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" width=\100%\>
                                  <tr>
                                      <th><font color=\#000080\> Ref. </font></th>
                                      <th><font color=\#000080\> Journal </font></th>
                                      <th><font color=\#000080\> Title </font></th>
                                  </tr>"))
		     
		     (java.sql.ResultSet-first rs) ;; rs.movefirst

		     (while (not (java.sql.ResultSet-isAfterLast rs))
			    
			    (set! res (string-append
				       res
				       "<tr>"))
			    
			    (set! jresult (java.sql.ResultSet-getString2 rs 12))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 12 Réf = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" (string-upcase result) " &nbsp;</td>"))

			    ;;(set! result (number->string (java.sql.ResultSet-getInt2 rs 13)))
			    (set! jresult (java.sql.ResultSet-getString2 rs 13))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result Revue = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>"))

			    (set! jresult (java.sql.ResultSet-getString2 rs 14))
			    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
			    (display-nl (string-append "BiglooCode.scm :: ResultatMesuresAF : result 14 Titre = " result))
			    (when (java.sql.ResultSet-wasNull rs)
				  (set! result "&nbsp;"))
			    (set! res (string-append res "<td>" result " &nbsp;</td>" 
                                           "</tr>"))
			    
			    (java.sql.ResultSet-next rs) ;; rs.Movenext

		     ) ;; end while

		     (set! res (string-append res "</table>"))
		     
		     ) ;; end begin else du if flagerreur 1

		   ) ;; end if flagerreur 1
		  
	    ) ;;  fin cas dans COND : ((string=?  choixres "Ref")


	   (else ;; du COND 
	    (display-var-nl "BiglooCode.scm :: ResultatMesuresAF :: UNSUPPORTED CASE with choixres =" choixres))) ;; fin COND

	  ;; en ASP la connection a la BDD est fermée ici

	  ) ;; end begin
	  
	) ;; end if (or (= flagerreur 1) (= flaguni 1) (= flagexiste 1))

    ;; closing connection to database
    (if dyna
	(eu.oca.DataBase-closeDynamic db)
	(begin
	  (eu.oca.DataBase-closeStatic)
	  #;(eu.oca.DataBase-deregisterDriverStatic)))

    (set! res (string-append res 
			     "
                       <table border=\"0\" width=\"95%\">
                                 <tr>
                                       <td valign=\"top\">" 
                                            ;;"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
                                           "<a href=\"../SidonieObject.htm\"><img src=\"../retour_blanc.gif\" border=\"0\" width=\"26\" height=\"26\"></a> 
                                          <font size=\"2\">
                                              <em> Search on an object</em>
                                          </font>
                                     </td>
                                     <td valign=\"top\">
                                          <a href=\"../SidonieStatistic.htm\">
                                              <img src=\"../retour_blanc.gif\" border=\"0\" width=\"26\" height=\"26\"></a> 
                                          <font size=\"2\">
                                               <em> Statistical search</em>
                                          </font>
                                     </td>"
                          ;; "</h5>" ;; /h5 was here but no h5 upside !!!
                                     "</td>
                                </tr>
                            </table>"))

    ;; (set! res (string-append res  "<br>"
    ;; 			          "<h1> "
    ;; 			                 "identificateur = " bstr_identificateur 
    ;; 			                 " , T1 = " bstr_objet 
    ;; 			                 " , choixres = " bstr_choixres
    ;; 			                 " , baraterreur = " baraterreur 
    ;; 					 " , flagerreur = " (number->string flagerreur) 
    ;; 					 " , flaguni = " (number->string flaguni) 
    ;; 					 " , flagexiste = " (number->string flagexiste)
    ;; 					 " , flagobjet = " (number->string flagobjet) 
    ;;                               "</h1>"))

    (set! res (string-append res "</body></html>"))


    ;;(display-var-nl "BiglooCode.scm :: ResultatMesuresAF :: res = " res) 
  
    (set! len (string-length res))

    (let  (
	   (bstr (make-byte* len))
	   )
      ;;(set! bstr res)
      (set! bstr ($string->bstring res))
      bstr)

    
    )


  )







(define (proc-barat baratin rs)

  (display-var-nl  "BiglooCode.scm :: proc-barat :: baratin :: " baratin)
  (set! res (string-append
			   res
			   "<h1 align=\"center\">
                           <font color=\"#0000FF\">SIDONIe - Résultats : Identifications et mesures</font>
                           </h1>
                           <div align=\"center\">
                              <center>
                                  <table width=\"85%\" border=\"3\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">
                                        <tr>
                                             <th width=\"80%\">
                                                 <font color=\"#0000FF\">"
                                                       baratin "<br>
                                                 </font>
                                             </th>
                                        </tr>
                                  </table>
                              </center>
                          </div>
		          <P>
                          <P>
                          <table border=\"1\" cellpadding=\"0\" align=\"center\" cellspacing=\"0\" width=\"20%\" >
                          <tr>
                              <th><font color=\"#000080\" > Objets </font></th>
                          </tr>"))

  (java.sql.ResultSet-first rs)
		
  (display-nl  "BiglooCode.scm :: proc-barat :: before loop !")
		
  (letrec ((loop (lambda ()
		   (if (java.sql.ResultSet-isAfterLast rs)
		       '()
		       (begin 
			       (display-nl  "BiglooCode.scm :: proc-barat :: passed  (java.sql.ResultSet-isAfterLast rs) dans else")
			       (let (
			     
				     (jresultat::java.lang.String #;(java.lang.String-java.lang.String8 "a result") (java.sql.ResultSet-getString2 rs 1#;0))
				     (resultat "UN RESULTAT"))
				 
				 (display-nl  "BiglooCode.scm :: proc-barat :: before (set! resultat (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresultat))")
				 (set! resultat (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresultat))
				 (display-var-nl   "BiglooCode.scm :: proc-barat :: resultat = " resultat)
				 (when (string-null? resultat)
				       (set! resultat "&nbsp;"))
				 (set! res (string-append
					    res
						  "<tr>
                                                       <td>"
						             (string-upcase resultat) " &nbsp;
                                                       </td>
                                                   </tr>"))
				 (java.sql.ResultSet-next rs)
				 (display-nl  "BiglooCode.scm :: proc-barat :: looping !")
				 (loop)))))))
	   (loop))
		
    (set! res (string-append
	       res
	       "</table>")))




(define (proc-barat-english baratin rs)
  (set! res (string-append
			   res
			   "<h1 align=\"center\">
                           <font color=\"#0000FF\">SIDONIe - Results : Identifications and measurements</font>
                           </h1>
                           <div align=\"center\">
                              <center>
                                  <table width=\"85%\" border=\"3\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">
                                        <tr>
                                             <th width=\"80%\">
                                                 <font color=\"#0000FF\">"
                                                       baratin "<br>
                                                 </font>
                                             </th>
                                        </tr>
                                  </table>
                              </center>
                          </div>
		          <P>
                          <P>
                          <table border=\"1\" cellpadding=\"0\" align=\"center\" cellspacing=\"0\" width=\"20%\" >
                          <tr>
                              <th><font color=\"#000080\" > Objects </font></th>
                          </tr>"))

  (java.sql.ResultSet-first rs)
		
  (display-nl  "BiglooCode.scm :: proc-barat-english :: before loop !")
		
  (letrec ((loop (lambda ()
		   (if (java.sql.ResultSet-isAfterLast rs)
		       '()
		       (let ((jresultat::java.lang.String #;(java.lang.String-java.lang.String8 "a result") (java.sql.ResultSet-getString2 rs 1 #;0))
			     (resultat "UN RESULTAT"))
			     ;;(bstr_tmp '()))
			 (display-nl  "BiglooCode.scm :: proc-barat :: before (set! resultat (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresultat))")
			 (set! resultat (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresultat)) 
			 (display-var-nl   "BiglooCode.scm :: proc-barat :: resultat = " resultat)
			 (when (string-null? resultat)
			       (set! resultat "&nbsp;"))
			 (set! res (string-append
						  res
						  "<tr>
                                                       <td>"
						             (string-upcase resultat) " &nbsp;
                                                       </td>
                                                   </tr>"))
			 (java.sql.ResultSet-next rs)
			 (display-nl  "BiglooCode.scm :: proc-barat :: looping !")
			 (loop))))))
    (loop))
		
  (set! res (string-append
	     res
	     "</table>")))





(define (sql-server->mysql-server-syntax query) ;; replace [ ] by `
  (string-replace (string-replace query #\[ #\`) #\] #\`))

;; extract field n from result set and return an HTML string
(define (field-result-set rs n)

  (let ((jresult::java.lang.String (java.lang.String-java.lang.String8 ""))
	(result ""))
    
    (set! jresult (java.sql.ResultSet-getString2 rs n))
    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
    (display-nl (string-append "BiglooCode.scm :: field-result-set : result = " result))
    
    (display "BiglooCode.scm :: field-result-set : = (java.sql.ResultSet-wasNull rs) :")
    (display (java.sql.ResultSet-wasNull rs))
    (newline)
    
    (if (java.sql.ResultSet-wasNull rs)
	"&nbsp;" 
	(string-upcase result))))


;; extract field n from result set and renturn an HTML string in lower case
(define (field-result-set-lowercase rs n)

  (let ((jresult::java.lang.String (java.lang.String-java.lang.String8 ""))
	(result ""))
    
    (set! jresult (java.sql.ResultSet-getString2 rs n))
    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
    (display-nl (string-append "BiglooCode.scm :: field-result-set : result = " result))
    
    (display "BiglooCode.scm :: field-result-set : = (java.sql.ResultSet-wasNull rs) :")
    (display (java.sql.ResultSet-wasNull rs))
    (newline)
    
    (if (java.sql.ResultSet-wasNull rs)
	"&nbsp;" 
	result)))


;; extract field n from result set and renturn an HTML string in lower case - check star 
(define (field-result-set-lowercase-check-star rs n)

  (let ((jresult::java.lang.String (java.lang.String-java.lang.String8 ""))
	(result ""))
    
    (set! jresult (java.sql.ResultSet-getString2 rs n))
    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
    (display-nl (string-append "BiglooCode.scm :: field-result-set : result = " result))
    
    (display "BiglooCode.scm :: field-result-set : = (java.sql.ResultSet-wasNull rs) :")
    (display (java.sql.ResultSet-wasNull rs))
    (newline)
    
    (if (or (java.sql.ResultSet-wasNull rs) (string=? result "*")) 
	"&nbsp;" 
	result)))


;; extract field n from result set and renturn an HTML string in lower case - check minus
(define (field-result-set-lowercase-check-minus rs n)

  (let ((jresult::java.lang.String (java.lang.String-java.lang.String8 ""))
	(result ""))
    
    (set! jresult (java.sql.ResultSet-getString2 rs n))
    (set! result (eu.oca.bigloofunct.JavaForBigloo-jstring->bstring jresult))
    (display-nl (string-append "BiglooCode.scm :: field-result-set : result = " result))
    
    (display "BiglooCode.scm :: field-result-set : = (java.sql.ResultSet-wasNull rs) :")
    (display (java.sql.ResultSet-wasNull rs))
    (newline)
    
    (if (or (java.sql.ResultSet-wasNull rs) (string=? result "-")) 
	"&nbsp;" 
	result)))


(define (fix x)
  (display-nl "BiglooCode.scm :: entering fix")
  (let ((r (inexact->exact (truncate x))))
    (display "BiglooCode.scm :: fix :: r =")
    (display r)
    (newline)
    r))


(define (num->string n)
  (if (bignum? n)
      (bignum->string n)
      (number->string n)))
